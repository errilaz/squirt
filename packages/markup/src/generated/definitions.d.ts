// GENERATED by @squirt/generator
import { ElementBuilder, Property, AtRule } from "../dom"

declare global {

  // HTML Elements

  /** Create a virtual `a` HTML element. */
  const a: ElementBuilder
  /** Create a virtual `abbr` HTML element. */
  const abbr: ElementBuilder
  /** Create a virtual `address` HTML element. */
  const address: ElementBuilder
  /** Create a virtual `area` HTML element. */
  const area: ElementBuilder
  /** Create a virtual `article` HTML element. */
  const article: ElementBuilder
  /** Create a virtual `aside` HTML element. */
  const aside: ElementBuilder
  /** Create a virtual `audio` HTML element. */
  const audio: ElementBuilder
  /** Create a virtual `b` HTML element. */
  const b: ElementBuilder
  /** Create a virtual `base` HTML element. */
  const base: ElementBuilder
  /** Create a virtual `bdi` HTML element. */
  const bdi: ElementBuilder
  /** Create a virtual `bdo` HTML element. */
  const bdo: ElementBuilder
  /** Create a virtual `blockquote` HTML element. */
  const blockquote: ElementBuilder
  /** Create a virtual `body` HTML element. */
  const body: ElementBuilder
  /** Create a virtual `br` HTML element. */
  const br: ElementBuilder
  /** Create a virtual `button` HTML element. */
  const button: ElementBuilder
  /** Create a virtual `canvas` HTML element. */
  const canvas: ElementBuilder
  /** Create a virtual `caption` HTML element. */
  const caption: ElementBuilder
  /** Create a virtual `cite` HTML element. */
  const cite: ElementBuilder
  /** Create a virtual `code` HTML element. */
  const code: ElementBuilder
  /** Create a virtual `col` HTML element. */
  const col: ElementBuilder
  /** Create a virtual `colgroup` HTML element. */
  const colgroup: ElementBuilder
  /** Create a virtual `data` HTML element. */
  const data: ElementBuilder
  /** Create a virtual `datalist` HTML element. */
  const datalist: ElementBuilder
  /** Create a virtual `dd` HTML element. */
  const dd: ElementBuilder
  /** Create a virtual `del` HTML element. */
  const del: ElementBuilder
  /** Create a virtual `details` HTML element. */
  const details: ElementBuilder
  /** Create a virtual `dfn` HTML element. */
  const dfn: ElementBuilder
  /** Create a virtual `dialog` HTML element. */
  const dialog: ElementBuilder
  /** Create a virtual `div` HTML element. */
  const div: ElementBuilder
  /** Create a virtual `dl` HTML element. */
  const dl: ElementBuilder
  /** Create a virtual `dt` HTML element. */
  const dt: ElementBuilder
  /** Create a virtual `em` HTML element. */
  const em: ElementBuilder
  /** Create a virtual `embed` HTML element. */
  const embed: ElementBuilder
  /** Create a virtual `fieldset` HTML element. */
  const fieldset: ElementBuilder
  /** Create a virtual `figcaption` HTML element. */
  const figcaption: ElementBuilder
  /** Create a virtual `figure` HTML element. */
  const figure: ElementBuilder
  /** Create a virtual `footer` HTML element. */
  const footer: ElementBuilder
  /** Create a virtual `form` HTML element. */
  const form: ElementBuilder
  /** Create a virtual `h1` HTML element. */
  const h1: ElementBuilder
  /** Create a virtual `h2` HTML element. */
  const h2: ElementBuilder
  /** Create a virtual `h3` HTML element. */
  const h3: ElementBuilder
  /** Create a virtual `h4` HTML element. */
  const h4: ElementBuilder
  /** Create a virtual `h5` HTML element. */
  const h5: ElementBuilder
  /** Create a virtual `h6` HTML element. */
  const h6: ElementBuilder
  /** Create a virtual `head` HTML element. */
  const head: ElementBuilder
  /** Create a virtual `header` HTML element. */
  const header: ElementBuilder
  /** Create a virtual `hgroup` HTML element. */
  const hgroup: ElementBuilder
  /** Create a virtual `hr` HTML element. */
  const hr: ElementBuilder
  /** Create a virtual `html` HTML element. */
  const html: ElementBuilder
  /** Create a virtual `i` HTML element. */
  const i: ElementBuilder
  /** Create a virtual `iframe` HTML element. */
  const iframe: ElementBuilder
  /** Create a virtual `img` HTML element. */
  const img: ElementBuilder
  /** Create a virtual `input` HTML element. */
  const input: ElementBuilder
  /** Create a virtual `ins` HTML element. */
  const ins: ElementBuilder
  /** Create a virtual `kbd` HTML element. */
  const kbd: ElementBuilder
  /** Create a virtual `label` HTML element. */
  const label: ElementBuilder
  /** Create a virtual `legend` HTML element. */
  const legend: ElementBuilder
  /** Create a virtual `li` HTML element. */
  const li: ElementBuilder
  /** Create a virtual `link` HTML element. */
  const link: ElementBuilder
  /** Create a virtual `main` HTML element. */
  const main: ElementBuilder
  /** Create a virtual `map` HTML element. */
  const map: ElementBuilder
  /** Create a virtual `mark` HTML element. */
  const mark: ElementBuilder
  /** Create a virtual `math` HTML element. */
  const math: ElementBuilder
  /** Create a virtual `menu` HTML element. */
  const menu: ElementBuilder
  /** Create a virtual `menuitem` HTML element. */
  const menuitem: ElementBuilder
  /** Create a virtual `meta` HTML element. */
  const meta: ElementBuilder
  /** Create a virtual `meter` HTML element. */
  const meter: ElementBuilder
  /** Create a virtual `nav` HTML element. */
  const nav: ElementBuilder
  /** Create a virtual `noscript` HTML element. */
  const noscript: ElementBuilder
  /** Create a virtual `object` HTML element. */
  const object: ElementBuilder
  /** Create a virtual `ol` HTML element. */
  const ol: ElementBuilder
  /** Create a virtual `optgroup` HTML element. */
  const optgroup: ElementBuilder
  /** Create a virtual `option` HTML element. */
  const option: ElementBuilder
  /** Create a virtual `output` HTML element. */
  const output: ElementBuilder
  /** Create a virtual `p` HTML element. */
  const p: ElementBuilder
  /** Create a virtual `param` HTML element. */
  const param: ElementBuilder
  /** Create a virtual `picture` HTML element. */
  const picture: ElementBuilder
  /** Create a virtual `pre` HTML element. */
  const pre: ElementBuilder
  /** Create a virtual `progress` HTML element. */
  const progress: ElementBuilder
  /** Create a virtual `q` HTML element. */
  const q: ElementBuilder
  /** Create a virtual `rb` HTML element. */
  const rb: ElementBuilder
  /** Create a virtual `rp` HTML element. */
  const rp: ElementBuilder
  /** Create a virtual `rt` HTML element. */
  const rt: ElementBuilder
  /** Create a virtual `rtc` HTML element. */
  const rtc: ElementBuilder
  /** Create a virtual `ruby` HTML element. */
  const ruby: ElementBuilder
  /** Create a virtual `s` HTML element. */
  const s: ElementBuilder
  /** Create a virtual `samp` HTML element. */
  const samp: ElementBuilder
  /** Create a virtual `script` HTML element. */
  const script: ElementBuilder
  /** Create a virtual `section` HTML element. */
  const section: ElementBuilder
  /** Create a virtual `select` HTML element. */
  const select: ElementBuilder
  /** Create a virtual `slot` HTML element. */
  const slot: ElementBuilder
  /** Create a virtual `small` HTML element. */
  const small: ElementBuilder
  /** Create a virtual `source` HTML element. */
  const source: ElementBuilder
  /** Create a virtual `span` HTML element. */
  const span: ElementBuilder
  /** Create a virtual `strong` HTML element. */
  const strong: ElementBuilder
  /** Create a virtual `style` HTML element. */
  const style: ElementBuilder
  /** Create a virtual `sub` HTML element. */
  const sub: ElementBuilder
  /** Create a virtual `summary` HTML element. */
  const summary: ElementBuilder
  /** Create a virtual `sup` HTML element. */
  const sup: ElementBuilder
  /** Create a virtual `svg` HTML element. */
  const svg: ElementBuilder
  /** Create a virtual `table` HTML element. */
  const table: ElementBuilder
  /** Create a virtual `tbody` HTML element. */
  const tbody: ElementBuilder
  /** Create a virtual `td` HTML element. */
  const td: ElementBuilder
  /** Create a virtual `template` HTML element. */
  const template: ElementBuilder
  /** Create a virtual `textarea` HTML element. */
  const textarea: ElementBuilder
  /** Create a virtual `tfoot` HTML element. */
  const tfoot: ElementBuilder
  /** Create a virtual `th` HTML element. */
  const th: ElementBuilder
  /** Create a virtual `thead` HTML element. */
  const thead: ElementBuilder
  /** Create a virtual `time` HTML element. */
  const time: ElementBuilder
  /** Create a virtual `title` HTML element. */
  const title: ElementBuilder
  /** Create a virtual `tr` HTML element. */
  const tr: ElementBuilder
  /** Create a virtual `track` HTML element. */
  const track: ElementBuilder
  /** Create a virtual `u` HTML element. */
  const u: ElementBuilder
  /** Create a virtual `ul` HTML element. */
  const ul: ElementBuilder
  /** Create a virtual `var` HTML element. */
  const _var: ElementBuilder
  /** Create a virtual `video` HTML element. */
  const video: ElementBuilder
  /** Create a virtual `wbr` HTML element. */
  const wbr: ElementBuilder

  // CSS Properties

  /** Create a virtual `-internal-text-autosizing-status` CSS property. */
  function internalTextAutosizingStatus(value: any): Property
  /** Create a virtual `accelerator` CSS property. */
  function accelerator(value: any): Property
  /** Create a virtual `accent-color` CSS property. */
  function accentColor(value: any): Property
  /** Create a virtual `-wap-accesskey` CSS property. */
  function wapAccesskey(value: any): Property
  /** Create a virtual `additive-symbols` CSS property. */
  function additiveSymbols(value: any): Property
  /** Create a virtual `align-content` CSS property. */
  function alignContent(value: any): Property
  /** Create a virtual `-webkit-align-content` CSS property. */
  function webkitAlignContent(value: any): Property
  /** Create a virtual `align-items` CSS property. */
  function alignItems(value: any): Property
  /** Create a virtual `-webkit-align-items` CSS property. */
  function webkitAlignItems(value: any): Property
  /** Create a virtual `align-self` CSS property. */
  function alignSelf(value: any): Property
  /** Create a virtual `-webkit-align-self` CSS property. */
  function webkitAlignSelf(value: any): Property
  /** Create a virtual `alignment-baseline` CSS property. */
  function alignmentBaseline(value: any): Property
  /** Create a virtual `all` CSS property. */
  function all(value: any): Property
  /** Create a virtual `alt` CSS property. */
  function alt(value: any): Property
  /** Create a virtual `-webkit-alt` CSS property. */
  function webkitAlt(value: any): Property
  /** Create a virtual `animation` CSS property. */
  function animation(value: any): Property
  /** Create a virtual `animation-composition` CSS property. */
  function animationComposition(value: any): Property
  /** Create a virtual `animation-delay` CSS property. */
  function animationDelay(value: any): Property
  /** Create a virtual `animation-delay-end` CSS property. */
  function animationDelayEnd(value: any): Property
  /** Create a virtual `-moz-animation-delay` CSS property. */
  function mozAnimationDelay(value: any): Property
  /** Create a virtual `-ms-animation-delay` CSS property. */
  function msAnimationDelay(value: any): Property
  /** Create a virtual `animation-delay-start` CSS property. */
  function animationDelayStart(value: any): Property
  /** Create a virtual `-webkit-animation-delay` CSS property. */
  function webkitAnimationDelay(value: any): Property
  /** Create a virtual `animation-direction` CSS property. */
  function animationDirection(value: any): Property
  /** Create a virtual `-moz-animation-direction` CSS property. */
  function mozAnimationDirection(value: any): Property
  /** Create a virtual `-ms-animation-direction` CSS property. */
  function msAnimationDirection(value: any): Property
  /** Create a virtual `-webkit-animation-direction` CSS property. */
  function webkitAnimationDirection(value: any): Property
  /** Create a virtual `animation-duration` CSS property. */
  function animationDuration(value: any): Property
  /** Create a virtual `-moz-animation-duration` CSS property. */
  function mozAnimationDuration(value: any): Property
  /** Create a virtual `-ms-animation-duration` CSS property. */
  function msAnimationDuration(value: any): Property
  /** Create a virtual `-webkit-animation-duration` CSS property. */
  function webkitAnimationDuration(value: any): Property
  /** Create a virtual `animation-fill-mode` CSS property. */
  function animationFillMode(value: any): Property
  /** Create a virtual `-moz-animation-fill-mode` CSS property. */
  function mozAnimationFillMode(value: any): Property
  /** Create a virtual `-ms-animation-fill-mode` CSS property. */
  function msAnimationFillMode(value: any): Property
  /** Create a virtual `-webkit-animation-fill-mode` CSS property. */
  function webkitAnimationFillMode(value: any): Property
  /** Create a virtual `animation-iteration-count` CSS property. */
  function animationIterationCount(value: any): Property
  /** Create a virtual `-moz-animation-iteration-count` CSS property. */
  function mozAnimationIterationCount(value: any): Property
  /** Create a virtual `-ms-animation-iteration-count` CSS property. */
  function msAnimationIterationCount(value: any): Property
  /** Create a virtual `-webkit-animation-iteration-count` CSS property. */
  function webkitAnimationIterationCount(value: any): Property
  /** Create a virtual `-moz-animation` CSS property. */
  function mozAnimation(value: any): Property
  /** Create a virtual `-ms-animation` CSS property. */
  function msAnimation(value: any): Property
  /** Create a virtual `animation-name` CSS property. */
  function animationName(value: any): Property
  /** Create a virtual `-moz-animation-name` CSS property. */
  function mozAnimationName(value: any): Property
  /** Create a virtual `-ms-animation-name` CSS property. */
  function msAnimationName(value: any): Property
  /** Create a virtual `-webkit-animation-name` CSS property. */
  function webkitAnimationName(value: any): Property
  /** Create a virtual `animation-play-state` CSS property. */
  function animationPlayState(value: any): Property
  /** Create a virtual `-moz-animation-play-state` CSS property. */
  function mozAnimationPlayState(value: any): Property
  /** Create a virtual `-ms-animation-play-state` CSS property. */
  function msAnimationPlayState(value: any): Property
  /** Create a virtual `-webkit-animation-play-state` CSS property. */
  function webkitAnimationPlayState(value: any): Property
  /** Create a virtual `animation-range` CSS property. */
  function animationRange(value: any): Property
  /** Create a virtual `animation-timing-function` CSS property. */
  function animationTimingFunction(value: any): Property
  /** Create a virtual `-moz-animation-timing-function` CSS property. */
  function mozAnimationTimingFunction(value: any): Property
  /** Create a virtual `-ms-animation-timing-function` CSS property. */
  function msAnimationTimingFunction(value: any): Property
  /** Create a virtual `-webkit-animation-timing-function` CSS property. */
  function webkitAnimationTimingFunction(value: any): Property
  /** Create a virtual `-webkit-animation-trigger` CSS property. */
  function webkitAnimationTrigger(value: any): Property
  /** Create a virtual `-webkit-animation` CSS property. */
  function webkitAnimation(value: any): Property
  /** Create a virtual `app-region` CSS property. */
  function appRegion(value: any): Property
  /** Create a virtual `-webkit-app-region` CSS property. */
  function webkitAppRegion(value: any): Property
  /** Create a virtual `appearance` CSS property. */
  function appearance(value: any): Property
  /** Create a virtual `-moz-appearance` CSS property. */
  function mozAppearance(value: any): Property
  /** Create a virtual `-webkit-appearance` CSS property. */
  function webkitAppearance(value: any): Property
  /** Create a virtual `ascent-override` CSS property. */
  function ascentOverride(value: any): Property
  /** Create a virtual `aspect-ratio` CSS property. */
  function aspectRatio(value: any): Property
  /** Create a virtual `-webkit-aspect-ratio` CSS property. */
  function webkitAspectRatio(value: any): Property
  /** Create a virtual `audio-level` CSS property. */
  function audioLevel(value: any): Property
  /** Create a virtual `azimuth` CSS property. */
  function azimuth(value: any): Property
  /** Create a virtual `backdrop-filter` CSS property. */
  function backdropFilter(value: any): Property
  /** Create a virtual `-webkit-backdrop-filter` CSS property. */
  function webkitBackdropFilter(value: any): Property
  /** Create a virtual `backface-visibility` CSS property. */
  function backfaceVisibility(value: any): Property
  /** Create a virtual `-moz-backface-visibility` CSS property. */
  function mozBackfaceVisibility(value: any): Property
  /** Create a virtual `-ms-backface-visibility` CSS property. */
  function msBackfaceVisibility(value: any): Property
  /** Create a virtual `-webkit-backface-visibility` CSS property. */
  function webkitBackfaceVisibility(value: any): Property
  /** Create a virtual `background` CSS property. */
  function background(value: any): Property
  /** Create a virtual `background-attachment` CSS property. */
  function backgroundAttachment(value: any): Property
  /** Create a virtual `-webkit-background-attachment` CSS property. */
  function webkitBackgroundAttachment(value: any): Property
  /** Create a virtual `background-blend-mode` CSS property. */
  function backgroundBlendMode(value: any): Property
  /** Create a virtual `background-clip` CSS property. */
  function backgroundClip(value: any): Property
  /** Create a virtual `-moz-background-clip` CSS property. */
  function mozBackgroundClip(value: any): Property
  /** Create a virtual `-webkit-background-clip` CSS property. */
  function webkitBackgroundClip(value: any): Property
  /** Create a virtual `background-color` CSS property. */
  function backgroundColor(value: any): Property
  /** Create a virtual `-webkit-background-color` CSS property. */
  function webkitBackgroundColor(value: any): Property
  /** Create a virtual `-webkit-background-composite` CSS property. */
  function webkitBackgroundComposite(value: any): Property
  /** Create a virtual `background-image` CSS property. */
  function backgroundImage(value: any): Property
  /** Create a virtual `-webkit-background-image` CSS property. */
  function webkitBackgroundImage(value: any): Property
  /** Create a virtual `-moz-background-inline-policy` CSS property. */
  function mozBackgroundInlinePolicy(value: any): Property
  /** Create a virtual `background-origin` CSS property. */
  function backgroundOrigin(value: any): Property
  /** Create a virtual `-moz-background-origin` CSS property. */
  function mozBackgroundOrigin(value: any): Property
  /** Create a virtual `-webkit-background-origin` CSS property. */
  function webkitBackgroundOrigin(value: any): Property
  /** Create a virtual `background-position` CSS property. */
  function backgroundPosition(value: any): Property
  /** Create a virtual `-webkit-background-position` CSS property. */
  function webkitBackgroundPosition(value: any): Property
  /** Create a virtual `background-position-x` CSS property. */
  function backgroundPositionX(value: any): Property
  /** Create a virtual `-webkit-background-position-x` CSS property. */
  function webkitBackgroundPositionX(value: any): Property
  /** Create a virtual `background-position-y` CSS property. */
  function backgroundPositionY(value: any): Property
  /** Create a virtual `-webkit-background-position-y` CSS property. */
  function webkitBackgroundPositionY(value: any): Property
  /** Create a virtual `background-repeat` CSS property. */
  function backgroundRepeat(value: any): Property
  /** Create a virtual `-webkit-background-repeat` CSS property. */
  function webkitBackgroundRepeat(value: any): Property
  /** Create a virtual `background-repeat-x` CSS property. */
  function backgroundRepeatX(value: any): Property
  /** Create a virtual `background-repeat-y` CSS property. */
  function backgroundRepeatY(value: any): Property
  /** Create a virtual `background-size` CSS property. */
  function backgroundSize(value: any): Property
  /** Create a virtual `-moz-background-size` CSS property. */
  function mozBackgroundSize(value: any): Property
  /** Create a virtual `-webkit-background-size` CSS property. */
  function webkitBackgroundSize(value: any): Property
  /** Create a virtual `-webkit-background` CSS property. */
  function webkitBackground(value: any): Property
  /** Create a virtual `base-palette` CSS property. */
  function basePalette(value: any): Property
  /** Create a virtual `baseline-shift` CSS property. */
  function baselineShift(value: any): Property
  /** Create a virtual `baseline-source` CSS property. */
  function baselineSource(value: any): Property
  /** Create a virtual `behavior` CSS property. */
  function behavior(value: any): Property
  /** Create a virtual `-moz-binding` CSS property. */
  function mozBinding(value: any): Property
  /** Create a virtual `block-ellipsis` CSS property. */
  function blockEllipsis(value: any): Property
  /** Create a virtual `-ms-block-progression` CSS property. */
  function msBlockProgression(value: any): Property
  /** Create a virtual `block-size` CSS property. */
  function blockSize(value: any): Property
  /** Create a virtual `block-step` CSS property. */
  function blockStep(value: any): Property
  /** Create a virtual `block-step-align` CSS property. */
  function blockStepAlign(value: any): Property
  /** Create a virtual `block-step-insert` CSS property. */
  function blockStepInsert(value: any): Property
  /** Create a virtual `block-step-round` CSS property. */
  function blockStepRound(value: any): Property
  /** Create a virtual `block-step-size` CSS property. */
  function blockStepSize(value: any): Property
  /** Create a virtual `bookmark-label` CSS property. */
  function bookmarkLabel(value: any): Property
  /** Create a virtual `bookmark-level` CSS property. */
  function bookmarkLevel(value: any): Property
  /** Create a virtual `bookmark-state` CSS property. */
  function bookmarkState(value: any): Property
  /** Create a virtual `border` CSS property. */
  function border(value: any): Property
  /** Create a virtual `-webkit-border-after-color` CSS property. */
  function webkitBorderAfterColor(value: any): Property
  /** Create a virtual `-webkit-border-after-style` CSS property. */
  function webkitBorderAfterStyle(value: any): Property
  /** Create a virtual `-webkit-border-after` CSS property. */
  function webkitBorderAfter(value: any): Property
  /** Create a virtual `-webkit-border-after-width` CSS property. */
  function webkitBorderAfterWidth(value: any): Property
  /** Create a virtual `-webkit-border-before-color` CSS property. */
  function webkitBorderBeforeColor(value: any): Property
  /** Create a virtual `-webkit-border-before-style` CSS property. */
  function webkitBorderBeforeStyle(value: any): Property
  /** Create a virtual `-webkit-border-before` CSS property. */
  function webkitBorderBefore(value: any): Property
  /** Create a virtual `-webkit-border-before-width` CSS property. */
  function webkitBorderBeforeWidth(value: any): Property
  /** Create a virtual `border-block` CSS property. */
  function borderBlock(value: any): Property
  /** Create a virtual `border-block-color` CSS property. */
  function borderBlockColor(value: any): Property
  /** Create a virtual `border-block-end` CSS property. */
  function borderBlockEnd(value: any): Property
  /** Create a virtual `border-block-end-color` CSS property. */
  function borderBlockEndColor(value: any): Property
  /** Create a virtual `border-block-end-style` CSS property. */
  function borderBlockEndStyle(value: any): Property
  /** Create a virtual `border-block-end-width` CSS property. */
  function borderBlockEndWidth(value: any): Property
  /** Create a virtual `border-block-start` CSS property. */
  function borderBlockStart(value: any): Property
  /** Create a virtual `border-block-start-color` CSS property. */
  function borderBlockStartColor(value: any): Property
  /** Create a virtual `border-block-start-style` CSS property. */
  function borderBlockStartStyle(value: any): Property
  /** Create a virtual `border-block-start-width` CSS property. */
  function borderBlockStartWidth(value: any): Property
  /** Create a virtual `border-block-style` CSS property. */
  function borderBlockStyle(value: any): Property
  /** Create a virtual `border-block-width` CSS property. */
  function borderBlockWidth(value: any): Property
  /** Create a virtual `border-bottom` CSS property. */
  function borderBottom(value: any): Property
  /** Create a virtual `border-bottom-color` CSS property. */
  function borderBottomColor(value: any): Property
  /** Create a virtual `-moz-border-bottom-colors` CSS property. */
  function mozBorderBottomColors(value: any): Property
  /** Create a virtual `border-bottom-left-radius` CSS property. */
  function borderBottomLeftRadius(value: any): Property
  /** Create a virtual `-webkit-border-bottom-left-radius` CSS property. */
  function webkitBorderBottomLeftRadius(value: any): Property
  /** Create a virtual `border-bottom-right-radius` CSS property. */
  function borderBottomRightRadius(value: any): Property
  /** Create a virtual `-webkit-border-bottom-right-radius` CSS property. */
  function webkitBorderBottomRightRadius(value: any): Property
  /** Create a virtual `border-bottom-style` CSS property. */
  function borderBottomStyle(value: any): Property
  /** Create a virtual `border-bottom-width` CSS property. */
  function borderBottomWidth(value: any): Property
  /** Create a virtual `border-boundary` CSS property. */
  function borderBoundary(value: any): Property
  /** Create a virtual `border-collapse` CSS property. */
  function borderCollapse(value: any): Property
  /** Create a virtual `border-color` CSS property. */
  function borderColor(value: any): Property
  /** Create a virtual `-moz-border-end-color` CSS property. */
  function mozBorderEndColor(value: any): Property
  /** Create a virtual `-webkit-border-end-color` CSS property. */
  function webkitBorderEndColor(value: any): Property
  /** Create a virtual `border-end-end-radius` CSS property. */
  function borderEndEndRadius(value: any): Property
  /** Create a virtual `-moz-border-end` CSS property. */
  function mozBorderEnd(value: any): Property
  /** Create a virtual `border-end-start-radius` CSS property. */
  function borderEndStartRadius(value: any): Property
  /** Create a virtual `-moz-border-end-style` CSS property. */
  function mozBorderEndStyle(value: any): Property
  /** Create a virtual `-webkit-border-end-style` CSS property. */
  function webkitBorderEndStyle(value: any): Property
  /** Create a virtual `-webkit-border-end` CSS property. */
  function webkitBorderEnd(value: any): Property
  /** Create a virtual `-moz-border-end-width` CSS property. */
  function mozBorderEndWidth(value: any): Property
  /** Create a virtual `-webkit-border-end-width` CSS property. */
  function webkitBorderEndWidth(value: any): Property
  /** Create a virtual `-webkit-border-fit` CSS property. */
  function webkitBorderFit(value: any): Property
  /** Create a virtual `-webkit-border-horizontal-spacing` CSS property. */
  function webkitBorderHorizontalSpacing(value: any): Property
  /** Create a virtual `border-image` CSS property. */
  function borderImage(value: any): Property
  /** Create a virtual `-moz-border-image` CSS property. */
  function mozBorderImage(value: any): Property
  /** Create a virtual `-o-border-image` CSS property. */
  function oBorderImage(value: any): Property
  /** Create a virtual `border-image-outset` CSS property. */
  function borderImageOutset(value: any): Property
  /** Create a virtual `-webkit-border-image-outset` CSS property. */
  function webkitBorderImageOutset(value: any): Property
  /** Create a virtual `border-image-repeat` CSS property. */
  function borderImageRepeat(value: any): Property
  /** Create a virtual `-webkit-border-image-repeat` CSS property. */
  function webkitBorderImageRepeat(value: any): Property
  /** Create a virtual `border-image-slice` CSS property. */
  function borderImageSlice(value: any): Property
  /** Create a virtual `-webkit-border-image-slice` CSS property. */
  function webkitBorderImageSlice(value: any): Property
  /** Create a virtual `border-image-source` CSS property. */
  function borderImageSource(value: any): Property
  /** Create a virtual `-webkit-border-image-source` CSS property. */
  function webkitBorderImageSource(value: any): Property
  /** Create a virtual `-webkit-border-image` CSS property. */
  function webkitBorderImage(value: any): Property
  /** Create a virtual `border-image-width` CSS property. */
  function borderImageWidth(value: any): Property
  /** Create a virtual `-webkit-border-image-width` CSS property. */
  function webkitBorderImageWidth(value: any): Property
  /** Create a virtual `border-inline` CSS property. */
  function borderInline(value: any): Property
  /** Create a virtual `border-inline-color` CSS property. */
  function borderInlineColor(value: any): Property
  /** Create a virtual `border-inline-end` CSS property. */
  function borderInlineEnd(value: any): Property
  /** Create a virtual `border-inline-end-color` CSS property. */
  function borderInlineEndColor(value: any): Property
  /** Create a virtual `border-inline-end-style` CSS property. */
  function borderInlineEndStyle(value: any): Property
  /** Create a virtual `border-inline-end-width` CSS property. */
  function borderInlineEndWidth(value: any): Property
  /** Create a virtual `border-inline-start` CSS property. */
  function borderInlineStart(value: any): Property
  /** Create a virtual `border-inline-start-color` CSS property. */
  function borderInlineStartColor(value: any): Property
  /** Create a virtual `border-inline-start-style` CSS property. */
  function borderInlineStartStyle(value: any): Property
  /** Create a virtual `border-inline-start-width` CSS property. */
  function borderInlineStartWidth(value: any): Property
  /** Create a virtual `border-inline-style` CSS property. */
  function borderInlineStyle(value: any): Property
  /** Create a virtual `border-inline-width` CSS property. */
  function borderInlineWidth(value: any): Property
  /** Create a virtual `border-left` CSS property. */
  function borderLeft(value: any): Property
  /** Create a virtual `border-left-color` CSS property. */
  function borderLeftColor(value: any): Property
  /** Create a virtual `-moz-border-left-colors` CSS property. */
  function mozBorderLeftColors(value: any): Property
  /** Create a virtual `border-left-style` CSS property. */
  function borderLeftStyle(value: any): Property
  /** Create a virtual `border-left-width` CSS property. */
  function borderLeftWidth(value: any): Property
  /** Create a virtual `border-radius` CSS property. */
  function borderRadius(value: any): Property
  /** Create a virtual `-moz-border-radius-bottomleft` CSS property. */
  function mozBorderRadiusBottomleft(value: any): Property
  /** Create a virtual `-moz-border-radius-bottomright` CSS property. */
  function mozBorderRadiusBottomright(value: any): Property
  /** Create a virtual `-moz-border-radius` CSS property. */
  function mozBorderRadius(value: any): Property
  /** Create a virtual `-moz-border-radius-topleft` CSS property. */
  function mozBorderRadiusTopleft(value: any): Property
  /** Create a virtual `-moz-border-radius-topright` CSS property. */
  function mozBorderRadiusTopright(value: any): Property
  /** Create a virtual `-webkit-border-radius` CSS property. */
  function webkitBorderRadius(value: any): Property
  /** Create a virtual `border-right` CSS property. */
  function borderRight(value: any): Property
  /** Create a virtual `border-right-color` CSS property. */
  function borderRightColor(value: any): Property
  /** Create a virtual `-moz-border-right-colors` CSS property. */
  function mozBorderRightColors(value: any): Property
  /** Create a virtual `border-right-style` CSS property. */
  function borderRightStyle(value: any): Property
  /** Create a virtual `border-right-width` CSS property. */
  function borderRightWidth(value: any): Property
  /** Create a virtual `border-spacing` CSS property. */
  function borderSpacing(value: any): Property
  /** Create a virtual `-moz-border-start-color` CSS property. */
  function mozBorderStartColor(value: any): Property
  /** Create a virtual `-webkit-border-start-color` CSS property. */
  function webkitBorderStartColor(value: any): Property
  /** Create a virtual `border-start-end-radius` CSS property. */
  function borderStartEndRadius(value: any): Property
  /** Create a virtual `-moz-border-start` CSS property. */
  function mozBorderStart(value: any): Property
  /** Create a virtual `border-start-start-radius` CSS property. */
  function borderStartStartRadius(value: any): Property
  /** Create a virtual `-moz-border-start-style` CSS property. */
  function mozBorderStartStyle(value: any): Property
  /** Create a virtual `-webkit-border-start-style` CSS property. */
  function webkitBorderStartStyle(value: any): Property
  /** Create a virtual `-webkit-border-start` CSS property. */
  function webkitBorderStart(value: any): Property
  /** Create a virtual `-moz-border-start-width` CSS property. */
  function mozBorderStartWidth(value: any): Property
  /** Create a virtual `-webkit-border-start-width` CSS property. */
  function webkitBorderStartWidth(value: any): Property
  /** Create a virtual `border-style` CSS property. */
  function borderStyle(value: any): Property
  /** Create a virtual `border-top` CSS property. */
  function borderTop(value: any): Property
  /** Create a virtual `border-top-color` CSS property. */
  function borderTopColor(value: any): Property
  /** Create a virtual `-moz-border-top-colors` CSS property. */
  function mozBorderTopColors(value: any): Property
  /** Create a virtual `border-top-left-radius` CSS property. */
  function borderTopLeftRadius(value: any): Property
  /** Create a virtual `-webkit-border-top-left-radius` CSS property. */
  function webkitBorderTopLeftRadius(value: any): Property
  /** Create a virtual `border-top-right-radius` CSS property. */
  function borderTopRightRadius(value: any): Property
  /** Create a virtual `-webkit-border-top-right-radius` CSS property. */
  function webkitBorderTopRightRadius(value: any): Property
  /** Create a virtual `border-top-style` CSS property. */
  function borderTopStyle(value: any): Property
  /** Create a virtual `border-top-width` CSS property. */
  function borderTopWidth(value: any): Property
  /** Create a virtual `-webkit-border-vertical-spacing` CSS property. */
  function webkitBorderVerticalSpacing(value: any): Property
  /** Create a virtual `border-width` CSS property. */
  function borderWidth(value: any): Property
  /** Create a virtual `bottom` CSS property. */
  function bottom(value: any): Property
  /** Create a virtual `-moz-box-align` CSS property. */
  function mozBoxAlign(value: any): Property
  /** Create a virtual `-webkit-box-align` CSS property. */
  function webkitBoxAlign(value: any): Property
  /** Create a virtual `box-decoration-break` CSS property. */
  function boxDecorationBreak(value: any): Property
  /** Create a virtual `-webkit-box-decoration-break` CSS property. */
  function webkitBoxDecorationBreak(value: any): Property
  /** Create a virtual `-moz-box-direction` CSS property. */
  function mozBoxDirection(value: any): Property
  /** Create a virtual `-webkit-box-direction` CSS property. */
  function webkitBoxDirection(value: any): Property
  /** Create a virtual `-webkit-box-flex-group` CSS property. */
  function webkitBoxFlexGroup(value: any): Property
  /** Create a virtual `-moz-box-flex` CSS property. */
  function mozBoxFlex(value: any): Property
  /** Create a virtual `-webkit-box-flex` CSS property. */
  function webkitBoxFlex(value: any): Property
  /** Create a virtual `-webkit-box-lines` CSS property. */
  function webkitBoxLines(value: any): Property
  /** Create a virtual `-moz-box-ordinal-group` CSS property. */
  function mozBoxOrdinalGroup(value: any): Property
  /** Create a virtual `-webkit-box-ordinal-group` CSS property. */
  function webkitBoxOrdinalGroup(value: any): Property
  /** Create a virtual `-moz-box-orient` CSS property. */
  function mozBoxOrient(value: any): Property
  /** Create a virtual `-webkit-box-orient` CSS property. */
  function webkitBoxOrient(value: any): Property
  /** Create a virtual `-moz-box-pack` CSS property. */
  function mozBoxPack(value: any): Property
  /** Create a virtual `-webkit-box-pack` CSS property. */
  function webkitBoxPack(value: any): Property
  /** Create a virtual `-webkit-box-reflect` CSS property. */
  function webkitBoxReflect(value: any): Property
  /** Create a virtual `box-shadow` CSS property. */
  function boxShadow(value: any): Property
  /** Create a virtual `-moz-box-shadow` CSS property. */
  function mozBoxShadow(value: any): Property
  /** Create a virtual `-webkit-box-shadow` CSS property. */
  function webkitBoxShadow(value: any): Property
  /** Create a virtual `box-sizing` CSS property. */
  function boxSizing(value: any): Property
  /** Create a virtual `-moz-box-sizing` CSS property. */
  function mozBoxSizing(value: any): Property
  /** Create a virtual `-webkit-box-sizing` CSS property. */
  function webkitBoxSizing(value: any): Property
  /** Create a virtual `box-snap` CSS property. */
  function boxSnap(value: any): Property
  /** Create a virtual `break-after` CSS property. */
  function breakAfter(value: any): Property
  /** Create a virtual `break-before` CSS property. */
  function breakBefore(value: any): Property
  /** Create a virtual `break-inside` CSS property. */
  function breakInside(value: any): Property
  /** Create a virtual `buffered-rendering` CSS property. */
  function bufferedRendering(value: any): Property
  /** Create a virtual `caption-side` CSS property. */
  function captionSide(value: any): Property
  /** Create a virtual `caret` CSS property. */
  function caret(value: any): Property
  /** Create a virtual `caret-color` CSS property. */
  function caretColor(value: any): Property
  /** Create a virtual `caret-shape` CSS property. */
  function caretShape(value: any): Property
  /** Create a virtual `chains` CSS property. */
  function chains(value: any): Property
  /** Create a virtual `clear` CSS property. */
  function clear(value: any): Property
  /** Create a virtual `clip` CSS property. */
  function clip(value: any): Property
  /** Create a virtual `clip-path` CSS property. */
  function clipPath(value: any): Property
  /** Create a virtual `-webkit-clip-path` CSS property. */
  function webkitClipPath(value: any): Property
  /** Create a virtual `clip-rule` CSS property. */
  function clipRule(value: any): Property
  /** Create a virtual `color` CSS property. */
  function color(value: any): Property
  /** Create a virtual `color-adjust` CSS property. */
  function colorAdjust(value: any): Property
  /** Create a virtual `-webkit-color-correction` CSS property. */
  function webkitColorCorrection(value: any): Property
  /** Create a virtual `-apple-color-filter` CSS property. */
  function appleColorFilter(value: any): Property
  /** Create a virtual `color-interpolation` CSS property. */
  function colorInterpolation(value: any): Property
  /** Create a virtual `color-interpolation-filters` CSS property. */
  function colorInterpolationFilters(value: any): Property
  /** Create a virtual `color-profile` CSS property. */
  function colorProfile(value: any): Property
  /** Create a virtual `color-rendering` CSS property. */
  function colorRendering(value: any): Property
  /** Create a virtual `color-scheme` CSS property. */
  function colorScheme(value: any): Property
  /** Create a virtual `-webkit-column-axis` CSS property. */
  function webkitColumnAxis(value: any): Property
  /** Create a virtual `-webkit-column-break-after` CSS property. */
  function webkitColumnBreakAfter(value: any): Property
  /** Create a virtual `-webkit-column-break-before` CSS property. */
  function webkitColumnBreakBefore(value: any): Property
  /** Create a virtual `-webkit-column-break-inside` CSS property. */
  function webkitColumnBreakInside(value: any): Property
  /** Create a virtual `column-count` CSS property. */
  function columnCount(value: any): Property
  /** Create a virtual `-moz-column-count` CSS property. */
  function mozColumnCount(value: any): Property
  /** Create a virtual `-webkit-column-count` CSS property. */
  function webkitColumnCount(value: any): Property
  /** Create a virtual `column-fill` CSS property. */
  function columnFill(value: any): Property
  /** Create a virtual `-moz-column-fill` CSS property. */
  function mozColumnFill(value: any): Property
  /** Create a virtual `-webkit-column-fill` CSS property. */
  function webkitColumnFill(value: any): Property
  /** Create a virtual `column-gap` CSS property. */
  function columnGap(value: any): Property
  /** Create a virtual `-moz-column-gap` CSS property. */
  function mozColumnGap(value: any): Property
  /** Create a virtual `-webkit-column-gap` CSS property. */
  function webkitColumnGap(value: any): Property
  /** Create a virtual `column-progression` CSS property. */
  function columnProgression(value: any): Property
  /** Create a virtual `-webkit-column-progression` CSS property. */
  function webkitColumnProgression(value: any): Property
  /** Create a virtual `column-rule` CSS property. */
  function columnRule(value: any): Property
  /** Create a virtual `column-rule-color` CSS property. */
  function columnRuleColor(value: any): Property
  /** Create a virtual `-moz-column-rule-color` CSS property. */
  function mozColumnRuleColor(value: any): Property
  /** Create a virtual `-webkit-column-rule-color` CSS property. */
  function webkitColumnRuleColor(value: any): Property
  /** Create a virtual `-moz-column-rule` CSS property. */
  function mozColumnRule(value: any): Property
  /** Create a virtual `column-rule-style` CSS property. */
  function columnRuleStyle(value: any): Property
  /** Create a virtual `-moz-column-rule-style` CSS property. */
  function mozColumnRuleStyle(value: any): Property
  /** Create a virtual `-webkit-column-rule-style` CSS property. */
  function webkitColumnRuleStyle(value: any): Property
  /** Create a virtual `-webkit-column-rule` CSS property. */
  function webkitColumnRule(value: any): Property
  /** Create a virtual `column-rule-width` CSS property. */
  function columnRuleWidth(value: any): Property
  /** Create a virtual `-moz-column-rule-width` CSS property. */
  function mozColumnRuleWidth(value: any): Property
  /** Create a virtual `-webkit-column-rule-width` CSS property. */
  function webkitColumnRuleWidth(value: any): Property
  /** Create a virtual `column-span` CSS property. */
  function columnSpan(value: any): Property
  /** Create a virtual `-moz-column-span` CSS property. */
  function mozColumnSpan(value: any): Property
  /** Create a virtual `-webkit-column-span` CSS property. */
  function webkitColumnSpan(value: any): Property
  /** Create a virtual `column-width` CSS property. */
  function columnWidth(value: any): Property
  /** Create a virtual `-moz-column-width` CSS property. */
  function mozColumnWidth(value: any): Property
  /** Create a virtual `-webkit-column-width` CSS property. */
  function webkitColumnWidth(value: any): Property
  /** Create a virtual `columns` CSS property. */
  function columns(value: any): Property
  /** Create a virtual `-moz-columns` CSS property. */
  function mozColumns(value: any): Property
  /** Create a virtual `-webkit-columns` CSS property. */
  function webkitColumns(value: any): Property
  /** Create a virtual `-webkit-composition-fill-color` CSS property. */
  function webkitCompositionFillColor(value: any): Property
  /** Create a virtual `-webkit-composition-frame-color` CSS property. */
  function webkitCompositionFrameColor(value: any): Property
  /** Create a virtual `contain` CSS property. */
  function contain(value: any): Property
  /** Create a virtual `contain-intrinsic-block-size` CSS property. */
  function containIntrinsicBlockSize(value: any): Property
  /** Create a virtual `contain-intrinsic-height` CSS property. */
  function containIntrinsicHeight(value: any): Property
  /** Create a virtual `contain-intrinsic-inline-size` CSS property. */
  function containIntrinsicInlineSize(value: any): Property
  /** Create a virtual `contain-intrinsic-size` CSS property. */
  function containIntrinsicSize(value: any): Property
  /** Create a virtual `contain-intrinsic-width` CSS property. */
  function containIntrinsicWidth(value: any): Property
  /** Create a virtual `container` CSS property. */
  function container(value: any): Property
  /** Create a virtual `container-name` CSS property. */
  function containerName(value: any): Property
  /** Create a virtual `container-type` CSS property. */
  function containerType(value: any): Property
  /** Create a virtual `content` CSS property. */
  function content(value: any): Property
  /** Create a virtual `content-visibility` CSS property. */
  function contentVisibility(value: any): Property
  /** Create a virtual `-ms-content-zoom-chaining` CSS property. */
  function msContentZoomChaining(value: any): Property
  /** Create a virtual `-ms-content-zoom-limit-max` CSS property. */
  function msContentZoomLimitMax(value: any): Property
  /** Create a virtual `-ms-content-zoom-limit-min` CSS property. */
  function msContentZoomLimitMin(value: any): Property
  /** Create a virtual `-ms-content-zoom-limit` CSS property. */
  function msContentZoomLimit(value: any): Property
  /** Create a virtual `-ms-content-zoom-snap` CSS property. */
  function msContentZoomSnap(value: any): Property
  /** Create a virtual `-ms-content-zoom-snap-points` CSS property. */
  function msContentZoomSnapPoints(value: any): Property
  /** Create a virtual `-ms-content-zoom-snap-type` CSS property. */
  function msContentZoomSnapType(value: any): Property
  /** Create a virtual `-ms-content-zooming` CSS property. */
  function msContentZooming(value: any): Property
  /** Create a virtual `continue` CSS property. */
  function _continue(value: any): Property
  /** Create a virtual `counter-increment` CSS property. */
  function counterIncrement(value: any): Property
  /** Create a virtual `counter-reset` CSS property. */
  function counterReset(value: any): Property
  /** Create a virtual `counter-set` CSS property. */
  function counterSet(value: any): Property
  /** Create a virtual `cue` CSS property. */
  function cue(value: any): Property
  /** Create a virtual `cue-after` CSS property. */
  function cueAfter(value: any): Property
  /** Create a virtual `cue-before` CSS property. */
  function cueBefore(value: any): Property
  /** Create a virtual `cursor` CSS property. */
  function cursor(value: any): Property
  /** Create a virtual `-webkit-cursor-visibility` CSS property. */
  function webkitCursorVisibility(value: any): Property
  /** Create a virtual `cx` CSS property. */
  function cx(value: any): Property
  /** Create a virtual `cy` CSS property. */
  function cy(value: any): Property
  /** Create a virtual `d` CSS property. */
  function d(value: any): Property
  /** Create a virtual `-apple-dashboard-region` CSS property. */
  function appleDashboardRegion(value: any): Property
  /** Create a virtual `-webkit-dashboard-region` CSS property. */
  function webkitDashboardRegion(value: any): Property
  /** Create a virtual `descent-override` CSS property. */
  function descentOverride(value: any): Property
  /** Create a virtual `direction` CSS property. */
  function direction(value: any): Property
  /** Create a virtual `display` CSS property. */
  function display(value: any): Property
  /** Create a virtual `display-align` CSS property. */
  function displayAlign(value: any): Property
  /** Create a virtual `dominant-baseline` CSS property. */
  function dominantBaseline(value: any): Property
  /** Create a virtual `elevation` CSS property. */
  function elevation(value: any): Property
  /** Create a virtual `empty-cells` CSS property. */
  function emptyCells(value: any): Property
  /** Create a virtual `enable-background` CSS property. */
  function enableBackground(value: any): Property
  /** Create a virtual `epub-caption-side` CSS property. */
  function epubCaptionSide(value: any): Property
  /** Create a virtual `epub-hyphens` CSS property. */
  function epubHyphens(value: any): Property
  /** Create a virtual `epub-text-combine` CSS property. */
  function epubTextCombine(value: any): Property
  /** Create a virtual `epub-text-emphasis` CSS property. */
  function epubTextEmphasis(value: any): Property
  /** Create a virtual `epub-text-emphasis-color` CSS property. */
  function epubTextEmphasisColor(value: any): Property
  /** Create a virtual `epub-text-emphasis-style` CSS property. */
  function epubTextEmphasisStyle(value: any): Property
  /** Create a virtual `epub-text-orientation` CSS property. */
  function epubTextOrientation(value: any): Property
  /** Create a virtual `epub-text-transform` CSS property. */
  function epubTextTransform(value: any): Property
  /** Create a virtual `epub-word-break` CSS property. */
  function epubWordBreak(value: any): Property
  /** Create a virtual `epub-writing-mode` CSS property. */
  function epubWritingMode(value: any): Property
  /** Create a virtual `fallback` CSS property. */
  function fallback(value: any): Property
  /** Create a virtual `fill` CSS property. */
  function fill(value: any): Property
  /** Create a virtual `fill-break` CSS property. */
  function fillBreak(value: any): Property
  /** Create a virtual `fill-color` CSS property. */
  function fillColor(value: any): Property
  /** Create a virtual `fill-image` CSS property. */
  function fillImage(value: any): Property
  /** Create a virtual `fill-opacity` CSS property. */
  function fillOpacity(value: any): Property
  /** Create a virtual `fill-origin` CSS property. */
  function fillOrigin(value: any): Property
  /** Create a virtual `fill-position` CSS property. */
  function fillPosition(value: any): Property
  /** Create a virtual `fill-repeat` CSS property. */
  function fillRepeat(value: any): Property
  /** Create a virtual `fill-rule` CSS property. */
  function fillRule(value: any): Property
  /** Create a virtual `fill-size` CSS property. */
  function fillSize(value: any): Property
  /** Create a virtual `filter` CSS property. */
  function filter(value: any): Property
  /** Create a virtual `-ms-filter` CSS property. */
  function msFilter(value: any): Property
  /** Create a virtual `-webkit-filter` CSS property. */
  function webkitFilter(value: any): Property
  /** Create a virtual `flex` CSS property. */
  function flex(value: any): Property
  /** Create a virtual `-ms-flex-align` CSS property. */
  function msFlexAlign(value: any): Property
  /** Create a virtual `-webkit-flex-align` CSS property. */
  function webkitFlexAlign(value: any): Property
  /** Create a virtual `flex-basis` CSS property. */
  function flexBasis(value: any): Property
  /** Create a virtual `-webkit-flex-basis` CSS property. */
  function webkitFlexBasis(value: any): Property
  /** Create a virtual `flex-direction` CSS property. */
  function flexDirection(value: any): Property
  /** Create a virtual `-ms-flex-direction` CSS property. */
  function msFlexDirection(value: any): Property
  /** Create a virtual `-webkit-flex-direction` CSS property. */
  function webkitFlexDirection(value: any): Property
  /** Create a virtual `flex-flow` CSS property. */
  function flexFlow(value: any): Property
  /** Create a virtual `-ms-flex-flow` CSS property. */
  function msFlexFlow(value: any): Property
  /** Create a virtual `-webkit-flex-flow` CSS property. */
  function webkitFlexFlow(value: any): Property
  /** Create a virtual `flex-grow` CSS property. */
  function flexGrow(value: any): Property
  /** Create a virtual `-webkit-flex-grow` CSS property. */
  function webkitFlexGrow(value: any): Property
  /** Create a virtual `-ms-flex-item-align` CSS property. */
  function msFlexItemAlign(value: any): Property
  /** Create a virtual `-webkit-flex-item-align` CSS property. */
  function webkitFlexItemAlign(value: any): Property
  /** Create a virtual `-ms-flex-line-pack` CSS property. */
  function msFlexLinePack(value: any): Property
  /** Create a virtual `-webkit-flex-line-pack` CSS property. */
  function webkitFlexLinePack(value: any): Property
  /** Create a virtual `-ms-flex` CSS property. */
  function msFlex(value: any): Property
  /** Create a virtual `-ms-flex-negative` CSS property. */
  function msFlexNegative(value: any): Property
  /** Create a virtual `-ms-flex-order` CSS property. */
  function msFlexOrder(value: any): Property
  /** Create a virtual `-webkit-flex-order` CSS property. */
  function webkitFlexOrder(value: any): Property
  /** Create a virtual `-ms-flex-pack` CSS property. */
  function msFlexPack(value: any): Property
  /** Create a virtual `-webkit-flex-pack` CSS property. */
  function webkitFlexPack(value: any): Property
  /** Create a virtual `-ms-flex-positive` CSS property. */
  function msFlexPositive(value: any): Property
  /** Create a virtual `-ms-flex-preferred-size` CSS property. */
  function msFlexPreferredSize(value: any): Property
  /** Create a virtual `flex-shrink` CSS property. */
  function flexShrink(value: any): Property
  /** Create a virtual `-webkit-flex-shrink` CSS property. */
  function webkitFlexShrink(value: any): Property
  /** Create a virtual `-webkit-flex` CSS property. */
  function webkitFlex(value: any): Property
  /** Create a virtual `flex-wrap` CSS property. */
  function flexWrap(value: any): Property
  /** Create a virtual `-ms-flex-wrap` CSS property. */
  function msFlexWrap(value: any): Property
  /** Create a virtual `-webkit-flex-wrap` CSS property. */
  function webkitFlexWrap(value: any): Property
  /** Create a virtual `float` CSS property. */
  function float(value: any): Property
  /** Create a virtual `float-defer` CSS property. */
  function floatDefer(value: any): Property
  /** Create a virtual `-moz-float-edge` CSS property. */
  function mozFloatEdge(value: any): Property
  /** Create a virtual `float-offset` CSS property. */
  function floatOffset(value: any): Property
  /** Create a virtual `float-reference` CSS property. */
  function floatReference(value: any): Property
  /** Create a virtual `flood-color` CSS property. */
  function floodColor(value: any): Property
  /** Create a virtual `flood-opacity` CSS property. */
  function floodOpacity(value: any): Property
  /** Create a virtual `flow` CSS property. */
  function flow(value: any): Property
  /** Create a virtual `flow-from` CSS property. */
  function flowFrom(value: any): Property
  /** Create a virtual `-ms-flow-from` CSS property. */
  function msFlowFrom(value: any): Property
  /** Create a virtual `-webkit-flow-from` CSS property. */
  function webkitFlowFrom(value: any): Property
  /** Create a virtual `flow-into` CSS property. */
  function flowInto(value: any): Property
  /** Create a virtual `-ms-flow-into` CSS property. */
  function msFlowInto(value: any): Property
  /** Create a virtual `-webkit-flow-into` CSS property. */
  function webkitFlowInto(value: any): Property
  /** Create a virtual `font` CSS property. */
  function font(value: any): Property
  /** Create a virtual `font-display` CSS property. */
  function fontDisplay(value: any): Property
  /** Create a virtual `font-family` CSS property. */
  function fontFamily(value: any): Property
  /** Create a virtual `font-feature-settings` CSS property. */
  function fontFeatureSettings(value: any): Property
  /** Create a virtual `-moz-font-feature-settings` CSS property. */
  function mozFontFeatureSettings(value: any): Property
  /** Create a virtual `-ms-font-feature-settings` CSS property. */
  function msFontFeatureSettings(value: any): Property
  /** Create a virtual `-webkit-font-feature-settings` CSS property. */
  function webkitFontFeatureSettings(value: any): Property
  /** Create a virtual `font-kerning` CSS property. */
  function fontKerning(value: any): Property
  /** Create a virtual `-webkit-font-kerning` CSS property. */
  function webkitFontKerning(value: any): Property
  /** Create a virtual `font-language-override` CSS property. */
  function fontLanguageOverride(value: any): Property
  /** Create a virtual `-moz-font-language-override` CSS property. */
  function mozFontLanguageOverride(value: any): Property
  /** Create a virtual `font-optical-sizing` CSS property. */
  function fontOpticalSizing(value: any): Property
  /** Create a virtual `font-palette` CSS property. */
  function fontPalette(value: any): Property
  /** Create a virtual `font-size` CSS property. */
  function fontSize(value: any): Property
  /** Create a virtual `font-size-adjust` CSS property. */
  function fontSizeAdjust(value: any): Property
  /** Create a virtual `-webkit-font-size-delta` CSS property. */
  function webkitFontSizeDelta(value: any): Property
  /** Create a virtual `-webkit-font-smoothing` CSS property. */
  function webkitFontSmoothing(value: any): Property
  /** Create a virtual `font-stretch` CSS property. */
  function fontStretch(value: any): Property
  /** Create a virtual `font-style` CSS property. */
  function fontStyle(value: any): Property
  /** Create a virtual `font-synthesis` CSS property. */
  function fontSynthesis(value: any): Property
  /** Create a virtual `font-synthesis-small-caps` CSS property. */
  function fontSynthesisSmallCaps(value: any): Property
  /** Create a virtual `font-synthesis-style` CSS property. */
  function fontSynthesisStyle(value: any): Property
  /** Create a virtual `font-synthesis-weight` CSS property. */
  function fontSynthesisWeight(value: any): Property
  /** Create a virtual `font-variant` CSS property. */
  function fontVariant(value: any): Property
  /** Create a virtual `font-variant-alternates` CSS property. */
  function fontVariantAlternates(value: any): Property
  /** Create a virtual `font-variant-caps` CSS property. */
  function fontVariantCaps(value: any): Property
  /** Create a virtual `font-variant-east-asian` CSS property. */
  function fontVariantEastAsian(value: any): Property
  /** Create a virtual `font-variant-emoji` CSS property. */
  function fontVariantEmoji(value: any): Property
  /** Create a virtual `font-variant-ligatures` CSS property. */
  function fontVariantLigatures(value: any): Property
  /** Create a virtual `-webkit-font-variant-ligatures` CSS property. */
  function webkitFontVariantLigatures(value: any): Property
  /** Create a virtual `font-variant-numeric` CSS property. */
  function fontVariantNumeric(value: any): Property
  /** Create a virtual `font-variant-position` CSS property. */
  function fontVariantPosition(value: any): Property
  /** Create a virtual `font-variation-settings` CSS property. */
  function fontVariationSettings(value: any): Property
  /** Create a virtual `font-weight` CSS property. */
  function fontWeight(value: any): Property
  /** Create a virtual `footnote-display` CSS property. */
  function footnoteDisplay(value: any): Property
  /** Create a virtual `footnote-policy` CSS property. */
  function footnotePolicy(value: any): Property
  /** Create a virtual `-moz-force-broken-image-icon` CSS property. */
  function mozForceBrokenImageIcon(value: any): Property
  /** Create a virtual `forced-color-adjust` CSS property. */
  function forcedColorAdjust(value: any): Property
  /** Create a virtual `gap` CSS property. */
  function gap(value: any): Property
  /** Create a virtual `glyph-orientation-horizontal` CSS property. */
  function glyphOrientationHorizontal(value: any): Property
  /** Create a virtual `glyph-orientation-vertical` CSS property. */
  function glyphOrientationVertical(value: any): Property
  /** Create a virtual `grid` CSS property. */
  function grid(value: any): Property
  /** Create a virtual `-webkit-grid-after` CSS property. */
  function webkitGridAfter(value: any): Property
  /** Create a virtual `grid-area` CSS property. */
  function gridArea(value: any): Property
  /** Create a virtual `grid-auto-columns` CSS property. */
  function gridAutoColumns(value: any): Property
  /** Create a virtual `-webkit-grid-auto-columns` CSS property. */
  function webkitGridAutoColumns(value: any): Property
  /** Create a virtual `grid-auto-flow` CSS property. */
  function gridAutoFlow(value: any): Property
  /** Create a virtual `-webkit-grid-auto-flow` CSS property. */
  function webkitGridAutoFlow(value: any): Property
  /** Create a virtual `grid-auto-rows` CSS property. */
  function gridAutoRows(value: any): Property
  /** Create a virtual `-webkit-grid-auto-rows` CSS property. */
  function webkitGridAutoRows(value: any): Property
  /** Create a virtual `-webkit-grid-before` CSS property. */
  function webkitGridBefore(value: any): Property
  /** Create a virtual `grid-column` CSS property. */
  function gridColumn(value: any): Property
  /** Create a virtual `-ms-grid-column-align` CSS property. */
  function msGridColumnAlign(value: any): Property
  /** Create a virtual `grid-column-end` CSS property. */
  function gridColumnEnd(value: any): Property
  /** Create a virtual `grid-column-gap` CSS property. */
  function gridColumnGap(value: any): Property
  /** Create a virtual `-ms-grid-column` CSS property. */
  function msGridColumn(value: any): Property
  /** Create a virtual `-ms-grid-column-span` CSS property. */
  function msGridColumnSpan(value: any): Property
  /** Create a virtual `grid-column-start` CSS property. */
  function gridColumnStart(value: any): Property
  /** Create a virtual `-webkit-grid-column` CSS property. */
  function webkitGridColumn(value: any): Property
  /** Create a virtual `-ms-grid-columns` CSS property. */
  function msGridColumns(value: any): Property
  /** Create a virtual `-webkit-grid-columns` CSS property. */
  function webkitGridColumns(value: any): Property
  /** Create a virtual `-webkit-grid-end` CSS property. */
  function webkitGridEnd(value: any): Property
  /** Create a virtual `grid-gap` CSS property. */
  function gridGap(value: any): Property
  /** Create a virtual `grid-row` CSS property. */
  function gridRow(value: any): Property
  /** Create a virtual `-ms-grid-row-align` CSS property. */
  function msGridRowAlign(value: any): Property
  /** Create a virtual `grid-row-end` CSS property. */
  function gridRowEnd(value: any): Property
  /** Create a virtual `grid-row-gap` CSS property. */
  function gridRowGap(value: any): Property
  /** Create a virtual `-ms-grid-row` CSS property. */
  function msGridRow(value: any): Property
  /** Create a virtual `-ms-grid-row-span` CSS property. */
  function msGridRowSpan(value: any): Property
  /** Create a virtual `grid-row-start` CSS property. */
  function gridRowStart(value: any): Property
  /** Create a virtual `-webkit-grid-row` CSS property. */
  function webkitGridRow(value: any): Property
  /** Create a virtual `-ms-grid-rows` CSS property. */
  function msGridRows(value: any): Property
  /** Create a virtual `-webkit-grid-rows` CSS property. */
  function webkitGridRows(value: any): Property
  /** Create a virtual `-webkit-grid-start` CSS property. */
  function webkitGridStart(value: any): Property
  /** Create a virtual `grid-template` CSS property. */
  function gridTemplate(value: any): Property
  /** Create a virtual `grid-template-areas` CSS property. */
  function gridTemplateAreas(value: any): Property
  /** Create a virtual `grid-template-columns` CSS property. */
  function gridTemplateColumns(value: any): Property
  /** Create a virtual `grid-template-rows` CSS property. */
  function gridTemplateRows(value: any): Property
  /** Create a virtual `hanging-punctuation` CSS property. */
  function hangingPunctuation(value: any): Property
  /** Create a virtual `height` CSS property. */
  function height(value: any): Property
  /** Create a virtual `-ms-high-contrast-adjust` CSS property. */
  function msHighContrastAdjust(value: any): Property
  /** Create a virtual `-webkit-highlight` CSS property. */
  function webkitHighlight(value: any): Property
  /** Create a virtual `hyphenate-character` CSS property. */
  function hyphenateCharacter(value: any): Property
  /** Create a virtual `-webkit-hyphenate-character` CSS property. */
  function webkitHyphenateCharacter(value: any): Property
  /** Create a virtual `-webkit-hyphenate-limit-after` CSS property. */
  function webkitHyphenateLimitAfter(value: any): Property
  /** Create a virtual `-webkit-hyphenate-limit-before` CSS property. */
  function webkitHyphenateLimitBefore(value: any): Property
  /** Create a virtual `hyphenate-limit-chars` CSS property. */
  function hyphenateLimitChars(value: any): Property
  /** Create a virtual `-ms-hyphenate-limit-chars` CSS property. */
  function msHyphenateLimitChars(value: any): Property
  /** Create a virtual `hyphenate-limit-last` CSS property. */
  function hyphenateLimitLast(value: any): Property
  /** Create a virtual `hyphenate-limit-lines` CSS property. */
  function hyphenateLimitLines(value: any): Property
  /** Create a virtual `-ms-hyphenate-limit-lines` CSS property. */
  function msHyphenateLimitLines(value: any): Property
  /** Create a virtual `-webkit-hyphenate-limit-lines` CSS property. */
  function webkitHyphenateLimitLines(value: any): Property
  /** Create a virtual `hyphenate-limit-zone` CSS property. */
  function hyphenateLimitZone(value: any): Property
  /** Create a virtual `-ms-hyphenate-limit-zone` CSS property. */
  function msHyphenateLimitZone(value: any): Property
  /** Create a virtual `hyphens` CSS property. */
  function hyphens(value: any): Property
  /** Create a virtual `-moz-hyphens` CSS property. */
  function mozHyphens(value: any): Property
  /** Create a virtual `-ms-hyphens` CSS property. */
  function msHyphens(value: any): Property
  /** Create a virtual `-webkit-hyphens` CSS property. */
  function webkitHyphens(value: any): Property
  /** Create a virtual `image-orientation` CSS property. */
  function imageOrientation(value: any): Property
  /** Create a virtual `-moz-image-region` CSS property. */
  function mozImageRegion(value: any): Property
  /** Create a virtual `image-rendering` CSS property. */
  function imageRendering(value: any): Property
  /** Create a virtual `image-resolution` CSS property. */
  function imageResolution(value: any): Property
  /** Create a virtual `-ms-ime-align` CSS property. */
  function msImeAlign(value: any): Property
  /** Create a virtual `ime-mode` CSS property. */
  function imeMode(value: any): Property
  /** Create a virtual `inherits` CSS property. */
  function inherits(value: any): Property
  /** Create a virtual `initial-letter` CSS property. */
  function initialLetter(value: any): Property
  /** Create a virtual `initial-letter-align` CSS property. */
  function initialLetterAlign(value: any): Property
  /** Create a virtual `-webkit-initial-letter` CSS property. */
  function webkitInitialLetter(value: any): Property
  /** Create a virtual `initial-letter-wrap` CSS property. */
  function initialLetterWrap(value: any): Property
  /** Create a virtual `initial-value` CSS property. */
  function initialValue(value: any): Property
  /** Create a virtual `inline-size` CSS property. */
  function inlineSize(value: any): Property
  /** Create a virtual `inline-sizing` CSS property. */
  function inlineSizing(value: any): Property
  /** Create a virtual `input-format` CSS property. */
  function inputFormat(value: any): Property
  /** Create a virtual `-wap-input-format` CSS property. */
  function wapInputFormat(value: any): Property
  /** Create a virtual `-wap-input-required` CSS property. */
  function wapInputRequired(value: any): Property
  /** Create a virtual `input-security` CSS property. */
  function inputSecurity(value: any): Property
  /** Create a virtual `inset` CSS property. */
  function inset(value: any): Property
  /** Create a virtual `inset-block` CSS property. */
  function insetBlock(value: any): Property
  /** Create a virtual `inset-block-end` CSS property. */
  function insetBlockEnd(value: any): Property
  /** Create a virtual `inset-block-start` CSS property. */
  function insetBlockStart(value: any): Property
  /** Create a virtual `inset-inline` CSS property. */
  function insetInline(value: any): Property
  /** Create a virtual `inset-inline-end` CSS property. */
  function insetInlineEnd(value: any): Property
  /** Create a virtual `inset-inline-start` CSS property. */
  function insetInlineStart(value: any): Property
  /** Create a virtual `-ms-interpolation-mode` CSS property. */
  function msInterpolationMode(value: any): Property
  /** Create a virtual `isolation` CSS property. */
  function isolation(value: any): Property
  /** Create a virtual `justify-content` CSS property. */
  function justifyContent(value: any): Property
  /** Create a virtual `-webkit-justify-content` CSS property. */
  function webkitJustifyContent(value: any): Property
  /** Create a virtual `justify-items` CSS property. */
  function justifyItems(value: any): Property
  /** Create a virtual `-webkit-justify-items` CSS property. */
  function webkitJustifyItems(value: any): Property
  /** Create a virtual `justify-self` CSS property. */
  function justifySelf(value: any): Property
  /** Create a virtual `-webkit-justify-self` CSS property. */
  function webkitJustifySelf(value: any): Property
  /** Create a virtual `kerning` CSS property. */
  function kerning(value: any): Property
  /** Create a virtual `layout-flow` CSS property. */
  function layoutFlow(value: any): Property
  /** Create a virtual `layout-grid` CSS property. */
  function layoutGrid(value: any): Property
  /** Create a virtual `layout-grid-char` CSS property. */
  function layoutGridChar(value: any): Property
  /** Create a virtual `layout-grid-line` CSS property. */
  function layoutGridLine(value: any): Property
  /** Create a virtual `layout-grid-mode` CSS property. */
  function layoutGridMode(value: any): Property
  /** Create a virtual `layout-grid-type` CSS property. */
  function layoutGridType(value: any): Property
  /** Create a virtual `leading-trim` CSS property. */
  function leadingTrim(value: any): Property
  /** Create a virtual `left` CSS property. */
  function left(value: any): Property
  /** Create a virtual `letter-spacing` CSS property. */
  function letterSpacing(value: any): Property
  /** Create a virtual `lighting-color` CSS property. */
  function lightingColor(value: any): Property
  /** Create a virtual `-webkit-line-align` CSS property. */
  function webkitLineAlign(value: any): Property
  /** Create a virtual `-webkit-line-box-contain` CSS property. */
  function webkitLineBoxContain(value: any): Property
  /** Create a virtual `line-break` CSS property. */
  function lineBreak(value: any): Property
  /** Create a virtual `-webkit-line-break` CSS property. */
  function webkitLineBreak(value: any): Property
  /** Create a virtual `line-clamp` CSS property. */
  function lineClamp(value: any): Property
  /** Create a virtual `-webkit-line-clamp` CSS property. */
  function webkitLineClamp(value: any): Property
  /** Create a virtual `line-gap-override` CSS property. */
  function lineGapOverride(value: any): Property
  /** Create a virtual `line-grid` CSS property. */
  function lineGrid(value: any): Property
  /** Create a virtual `-webkit-line-grid-snap` CSS property. */
  function webkitLineGridSnap(value: any): Property
  /** Create a virtual `-webkit-line-grid` CSS property. */
  function webkitLineGrid(value: any): Property
  /** Create a virtual `line-height` CSS property. */
  function lineHeight(value: any): Property
  /** Create a virtual `line-height-step` CSS property. */
  function lineHeightStep(value: any): Property
  /** Create a virtual `line-increment` CSS property. */
  function lineIncrement(value: any): Property
  /** Create a virtual `line-padding` CSS property. */
  function linePadding(value: any): Property
  /** Create a virtual `line-snap` CSS property. */
  function lineSnap(value: any): Property
  /** Create a virtual `-webkit-line-snap` CSS property. */
  function webkitLineSnap(value: any): Property
  /** Create a virtual `-o-link` CSS property. */
  function oLink(value: any): Property
  /** Create a virtual `-o-link-source` CSS property. */
  function oLinkSource(value: any): Property
  /** Create a virtual `list-style` CSS property. */
  function listStyle(value: any): Property
  /** Create a virtual `list-style-image` CSS property. */
  function listStyleImage(value: any): Property
  /** Create a virtual `list-style-position` CSS property. */
  function listStylePosition(value: any): Property
  /** Create a virtual `list-style-type` CSS property. */
  function listStyleType(value: any): Property
  /** Create a virtual `-webkit-locale` CSS property. */
  function webkitLocale(value: any): Property
  /** Create a virtual `-webkit-logical-height` CSS property. */
  function webkitLogicalHeight(value: any): Property
  /** Create a virtual `-webkit-logical-width` CSS property. */
  function webkitLogicalWidth(value: any): Property
  /** Create a virtual `margin` CSS property. */
  function margin(value: any): Property
  /** Create a virtual `-webkit-margin-after-collapse` CSS property. */
  function webkitMarginAfterCollapse(value: any): Property
  /** Create a virtual `-webkit-margin-after` CSS property. */
  function webkitMarginAfter(value: any): Property
  /** Create a virtual `-webkit-margin-before-collapse` CSS property. */
  function webkitMarginBeforeCollapse(value: any): Property
  /** Create a virtual `-webkit-margin-before` CSS property. */
  function webkitMarginBefore(value: any): Property
  /** Create a virtual `margin-block` CSS property. */
  function marginBlock(value: any): Property
  /** Create a virtual `margin-block-end` CSS property. */
  function marginBlockEnd(value: any): Property
  /** Create a virtual `margin-block-start` CSS property. */
  function marginBlockStart(value: any): Property
  /** Create a virtual `margin-bottom` CSS property. */
  function marginBottom(value: any): Property
  /** Create a virtual `-webkit-margin-bottom-collapse` CSS property. */
  function webkitMarginBottomCollapse(value: any): Property
  /** Create a virtual `margin-break` CSS property. */
  function marginBreak(value: any): Property
  /** Create a virtual `-webkit-margin-collapse` CSS property. */
  function webkitMarginCollapse(value: any): Property
  /** Create a virtual `-moz-margin-end` CSS property. */
  function mozMarginEnd(value: any): Property
  /** Create a virtual `-webkit-margin-end` CSS property. */
  function webkitMarginEnd(value: any): Property
  /** Create a virtual `margin-inline` CSS property. */
  function marginInline(value: any): Property
  /** Create a virtual `margin-inline-end` CSS property. */
  function marginInlineEnd(value: any): Property
  /** Create a virtual `margin-inline-start` CSS property. */
  function marginInlineStart(value: any): Property
  /** Create a virtual `margin-left` CSS property. */
  function marginLeft(value: any): Property
  /** Create a virtual `margin-right` CSS property. */
  function marginRight(value: any): Property
  /** Create a virtual `-moz-margin-start` CSS property. */
  function mozMarginStart(value: any): Property
  /** Create a virtual `-webkit-margin-start` CSS property. */
  function webkitMarginStart(value: any): Property
  /** Create a virtual `margin-top` CSS property. */
  function marginTop(value: any): Property
  /** Create a virtual `-webkit-margin-top-collapse` CSS property. */
  function webkitMarginTopCollapse(value: any): Property
  /** Create a virtual `margin-trim` CSS property. */
  function marginTrim(value: any): Property
  /** Create a virtual `marker` CSS property. */
  function marker(value: any): Property
  /** Create a virtual `marker-end` CSS property. */
  function markerEnd(value: any): Property
  /** Create a virtual `marker-knockout-left` CSS property. */
  function markerKnockoutLeft(value: any): Property
  /** Create a virtual `marker-knockout-right` CSS property. */
  function markerKnockoutRight(value: any): Property
  /** Create a virtual `marker-mid` CSS property. */
  function markerMid(value: any): Property
  /** Create a virtual `marker-offset` CSS property. */
  function markerOffset(value: any): Property
  /** Create a virtual `marker-pattern` CSS property. */
  function markerPattern(value: any): Property
  /** Create a virtual `marker-segment` CSS property. */
  function markerSegment(value: any): Property
  /** Create a virtual `marker-side` CSS property. */
  function markerSide(value: any): Property
  /** Create a virtual `marker-start` CSS property. */
  function markerStart(value: any): Property
  /** Create a virtual `marks` CSS property. */
  function marks(value: any): Property
  /** Create a virtual `-wap-marquee-dir` CSS property. */
  function wapMarqueeDir(value: any): Property
  /** Create a virtual `-webkit-marquee-direction` CSS property. */
  function webkitMarqueeDirection(value: any): Property
  /** Create a virtual `-webkit-marquee-increment` CSS property. */
  function webkitMarqueeIncrement(value: any): Property
  /** Create a virtual `-wap-marquee-loop` CSS property. */
  function wapMarqueeLoop(value: any): Property
  /** Create a virtual `-webkit-marquee-repetition` CSS property. */
  function webkitMarqueeRepetition(value: any): Property
  /** Create a virtual `-wap-marquee-speed` CSS property. */
  function wapMarqueeSpeed(value: any): Property
  /** Create a virtual `-webkit-marquee-speed` CSS property. */
  function webkitMarqueeSpeed(value: any): Property
  /** Create a virtual `-wap-marquee-style` CSS property. */
  function wapMarqueeStyle(value: any): Property
  /** Create a virtual `-webkit-marquee-style` CSS property. */
  function webkitMarqueeStyle(value: any): Property
  /** Create a virtual `-webkit-marquee` CSS property. */
  function webkitMarquee(value: any): Property
  /** Create a virtual `mask` CSS property. */
  function mask(value: any): Property
  /** Create a virtual `-webkit-mask-attachment` CSS property. */
  function webkitMaskAttachment(value: any): Property
  /** Create a virtual `mask-border` CSS property. */
  function maskBorder(value: any): Property
  /** Create a virtual `mask-border-mode` CSS property. */
  function maskBorderMode(value: any): Property
  /** Create a virtual `mask-border-outset` CSS property. */
  function maskBorderOutset(value: any): Property
  /** Create a virtual `mask-border-repeat` CSS property. */
  function maskBorderRepeat(value: any): Property
  /** Create a virtual `mask-border-slice` CSS property. */
  function maskBorderSlice(value: any): Property
  /** Create a virtual `mask-border-source` CSS property. */
  function maskBorderSource(value: any): Property
  /** Create a virtual `mask-border-width` CSS property. */
  function maskBorderWidth(value: any): Property
  /** Create a virtual `-webkit-mask-box-image-outset` CSS property. */
  function webkitMaskBoxImageOutset(value: any): Property
  /** Create a virtual `-webkit-mask-box-image-repeat` CSS property. */
  function webkitMaskBoxImageRepeat(value: any): Property
  /** Create a virtual `-webkit-mask-box-image-slice` CSS property. */
  function webkitMaskBoxImageSlice(value: any): Property
  /** Create a virtual `-webkit-mask-box-image-source` CSS property. */
  function webkitMaskBoxImageSource(value: any): Property
  /** Create a virtual `-webkit-mask-box-image` CSS property. */
  function webkitMaskBoxImage(value: any): Property
  /** Create a virtual `-webkit-mask-box-image-width` CSS property. */
  function webkitMaskBoxImageWidth(value: any): Property
  /** Create a virtual `mask-clip` CSS property. */
  function maskClip(value: any): Property
  /** Create a virtual `-webkit-mask-clip` CSS property. */
  function webkitMaskClip(value: any): Property
  /** Create a virtual `mask-composite` CSS property. */
  function maskComposite(value: any): Property
  /** Create a virtual `-webkit-mask-composite` CSS property. */
  function webkitMaskComposite(value: any): Property
  /** Create a virtual `mask-image` CSS property. */
  function maskImage(value: any): Property
  /** Create a virtual `-webkit-mask-image` CSS property. */
  function webkitMaskImage(value: any): Property
  /** Create a virtual `mask-mode` CSS property. */
  function maskMode(value: any): Property
  /** Create a virtual `mask-origin` CSS property. */
  function maskOrigin(value: any): Property
  /** Create a virtual `-webkit-mask-origin` CSS property. */
  function webkitMaskOrigin(value: any): Property
  /** Create a virtual `mask-position` CSS property. */
  function maskPosition(value: any): Property
  /** Create a virtual `-webkit-mask-position` CSS property. */
  function webkitMaskPosition(value: any): Property
  /** Create a virtual `mask-position-x` CSS property. */
  function maskPositionX(value: any): Property
  /** Create a virtual `-webkit-mask-position-x` CSS property. */
  function webkitMaskPositionX(value: any): Property
  /** Create a virtual `mask-position-y` CSS property. */
  function maskPositionY(value: any): Property
  /** Create a virtual `-webkit-mask-position-y` CSS property. */
  function webkitMaskPositionY(value: any): Property
  /** Create a virtual `mask-repeat` CSS property. */
  function maskRepeat(value: any): Property
  /** Create a virtual `-webkit-mask-repeat` CSS property. */
  function webkitMaskRepeat(value: any): Property
  /** Create a virtual `-webkit-mask-repeat-x` CSS property. */
  function webkitMaskRepeatX(value: any): Property
  /** Create a virtual `-webkit-mask-repeat-y` CSS property. */
  function webkitMaskRepeatY(value: any): Property
  /** Create a virtual `mask-size` CSS property. */
  function maskSize(value: any): Property
  /** Create a virtual `-webkit-mask-size` CSS property. */
  function webkitMaskSize(value: any): Property
  /** Create a virtual `mask-source-type` CSS property. */
  function maskSourceType(value: any): Property
  /** Create a virtual `-webkit-mask-source-type` CSS property. */
  function webkitMaskSourceType(value: any): Property
  /** Create a virtual `mask-type` CSS property. */
  function maskType(value: any): Property
  /** Create a virtual `-webkit-mask` CSS property. */
  function webkitMask(value: any): Property
  /** Create a virtual `-webkit-match-nearest-mail-blockquote-color` CSS property. */
  function webkitMatchNearestMailBlockquoteColor(value: any): Property
  /** Create a virtual `math-style` CSS property. */
  function mathStyle(value: any): Property
  /** Create a virtual `max-block-size` CSS property. */
  function maxBlockSize(value: any): Property
  /** Create a virtual `max-height` CSS property. */
  function maxHeight(value: any): Property
  /** Create a virtual `max-inline-size` CSS property. */
  function maxInlineSize(value: any): Property
  /** Create a virtual `max-lines` CSS property. */
  function maxLines(value: any): Property
  /** Create a virtual `-webkit-max-logical-height` CSS property. */
  function webkitMaxLogicalHeight(value: any): Property
  /** Create a virtual `-webkit-max-logical-width` CSS property. */
  function webkitMaxLogicalWidth(value: any): Property
  /** Create a virtual `max-width` CSS property. */
  function maxWidth(value: any): Property
  /** Create a virtual `max-zoom` CSS property. */
  function maxZoom(value: any): Property
  /** Create a virtual `min-block-size` CSS property. */
  function minBlockSize(value: any): Property
  /** Create a virtual `min-height` CSS property. */
  function minHeight(value: any): Property
  /** Create a virtual `min-inline-size` CSS property. */
  function minInlineSize(value: any): Property
  /** Create a virtual `min-intrinsic-sizing` CSS property. */
  function minIntrinsicSizing(value: any): Property
  /** Create a virtual `-webkit-min-logical-height` CSS property. */
  function webkitMinLogicalHeight(value: any): Property
  /** Create a virtual `-webkit-min-logical-width` CSS property. */
  function webkitMinLogicalWidth(value: any): Property
  /** Create a virtual `min-width` CSS property. */
  function minWidth(value: any): Property
  /** Create a virtual `min-zoom` CSS property. */
  function minZoom(value: any): Property
  /** Create a virtual `mix-blend-mode` CSS property. */
  function mixBlendMode(value: any): Property
  /** Create a virtual `motion` CSS property. */
  function motion(value: any): Property
  /** Create a virtual `motion-offset` CSS property. */
  function motionOffset(value: any): Property
  /** Create a virtual `motion-path` CSS property. */
  function motionPath(value: any): Property
  /** Create a virtual `motion-rotation` CSS property. */
  function motionRotation(value: any): Property
  /** Create a virtual `nav-down` CSS property. */
  function navDown(value: any): Property
  /** Create a virtual `nav-index` CSS property. */
  function navIndex(value: any): Property
  /** Create a virtual `nav-left` CSS property. */
  function navLeft(value: any): Property
  /** Create a virtual `nav-right` CSS property. */
  function navRight(value: any): Property
  /** Create a virtual `nav-up` CSS property. */
  function navUp(value: any): Property
  /** Create a virtual `-webkit-nbsp-mode` CSS property. */
  function webkitNbspMode(value: any): Property
  /** Create a virtual `negative` CSS property. */
  function negative(value: any): Property
  /** Create a virtual `object-fit` CSS property. */
  function objectFit(value: any): Property
  /** Create a virtual `-o-object-fit` CSS property. */
  function oObjectFit(value: any): Property
  /** Create a virtual `object-position` CSS property. */
  function objectPosition(value: any): Property
  /** Create a virtual `-o-object-position` CSS property. */
  function oObjectPosition(value: any): Property
  /** Create a virtual `object-view-box` CSS property. */
  function objectViewBox(value: any): Property
  /** Create a virtual `offset` CSS property. */
  function offset(value: any): Property
  /** Create a virtual `offset-anchor` CSS property. */
  function offsetAnchor(value: any): Property
  /** Create a virtual `offset-block-end` CSS property. */
  function offsetBlockEnd(value: any): Property
  /** Create a virtual `offset-block-start` CSS property. */
  function offsetBlockStart(value: any): Property
  /** Create a virtual `offset-distance` CSS property. */
  function offsetDistance(value: any): Property
  /** Create a virtual `offset-inline-end` CSS property. */
  function offsetInlineEnd(value: any): Property
  /** Create a virtual `offset-inline-start` CSS property. */
  function offsetInlineStart(value: any): Property
  /** Create a virtual `offset-path` CSS property. */
  function offsetPath(value: any): Property
  /** Create a virtual `offset-position` CSS property. */
  function offsetPosition(value: any): Property
  /** Create a virtual `offset-rotate` CSS property. */
  function offsetRotate(value: any): Property
  /** Create a virtual `offset-rotation` CSS property. */
  function offsetRotation(value: any): Property
  /** Create a virtual `opacity` CSS property. */
  function opacity(value: any): Property
  /** Create a virtual `-moz-opacity` CSS property. */
  function mozOpacity(value: any): Property
  /** Create a virtual `-webkit-opacity` CSS property. */
  function webkitOpacity(value: any): Property
  /** Create a virtual `order` CSS property. */
  function order(value: any): Property
  /** Create a virtual `-webkit-order` CSS property. */
  function webkitOrder(value: any): Property
  /** Create a virtual `-moz-orient` CSS property. */
  function mozOrient(value: any): Property
  /** Create a virtual `orientation` CSS property. */
  function orientation(value: any): Property
  /** Create a virtual `orphans` CSS property. */
  function orphans(value: any): Property
  /** Create a virtual `-moz-osx-font-smoothing` CSS property. */
  function mozOsxFontSmoothing(value: any): Property
  /** Create a virtual `outline` CSS property. */
  function outline(value: any): Property
  /** Create a virtual `outline-color` CSS property. */
  function outlineColor(value: any): Property
  /** Create a virtual `-moz-outline-color` CSS property. */
  function mozOutlineColor(value: any): Property
  /** Create a virtual `-moz-outline` CSS property. */
  function mozOutline(value: any): Property
  /** Create a virtual `outline-offset` CSS property. */
  function outlineOffset(value: any): Property
  /** Create a virtual `-moz-outline-offset` CSS property. */
  function mozOutlineOffset(value: any): Property
  /** Create a virtual `-moz-outline-radius-bottomleft` CSS property. */
  function mozOutlineRadiusBottomleft(value: any): Property
  /** Create a virtual `-moz-outline-radius-bottomright` CSS property. */
  function mozOutlineRadiusBottomright(value: any): Property
  /** Create a virtual `-moz-outline-radius` CSS property. */
  function mozOutlineRadius(value: any): Property
  /** Create a virtual `-moz-outline-radius-topleft` CSS property. */
  function mozOutlineRadiusTopleft(value: any): Property
  /** Create a virtual `-moz-outline-radius-topright` CSS property. */
  function mozOutlineRadiusTopright(value: any): Property
  /** Create a virtual `outline-style` CSS property. */
  function outlineStyle(value: any): Property
  /** Create a virtual `-moz-outline-style` CSS property. */
  function mozOutlineStyle(value: any): Property
  /** Create a virtual `outline-width` CSS property. */
  function outlineWidth(value: any): Property
  /** Create a virtual `-moz-outline-width` CSS property. */
  function mozOutlineWidth(value: any): Property
  /** Create a virtual `overflow` CSS property. */
  function overflow(value: any): Property
  /** Create a virtual `overflow-anchor` CSS property. */
  function overflowAnchor(value: any): Property
  /** Create a virtual `overflow-block` CSS property. */
  function overflowBlock(value: any): Property
  /** Create a virtual `overflow-clip-margin` CSS property. */
  function overflowClipMargin(value: any): Property
  /** Create a virtual `overflow-inline` CSS property. */
  function overflowInline(value: any): Property
  /** Create a virtual `-webkit-overflow-scrolling` CSS property. */
  function webkitOverflowScrolling(value: any): Property
  /** Create a virtual `-ms-overflow-style` CSS property. */
  function msOverflowStyle(value: any): Property
  /** Create a virtual `overflow-wrap` CSS property. */
  function overflowWrap(value: any): Property
  /** Create a virtual `overflow-x` CSS property. */
  function overflowX(value: any): Property
  /** Create a virtual `overflow-y` CSS property. */
  function overflowY(value: any): Property
  /** Create a virtual `override-colors` CSS property. */
  function overrideColors(value: any): Property
  /** Create a virtual `overscroll-behavior` CSS property. */
  function overscrollBehavior(value: any): Property
  /** Create a virtual `overscroll-behavior-block` CSS property. */
  function overscrollBehaviorBlock(value: any): Property
  /** Create a virtual `overscroll-behavior-inline` CSS property. */
  function overscrollBehaviorInline(value: any): Property
  /** Create a virtual `overscroll-behavior-x` CSS property. */
  function overscrollBehaviorX(value: any): Property
  /** Create a virtual `overscroll-behavior-y` CSS property. */
  function overscrollBehaviorY(value: any): Property
  /** Create a virtual `pad` CSS property. */
  function pad(value: any): Property
  /** Create a virtual `padding` CSS property. */
  function padding(value: any): Property
  /** Create a virtual `-webkit-padding-after` CSS property. */
  function webkitPaddingAfter(value: any): Property
  /** Create a virtual `-webkit-padding-before` CSS property. */
  function webkitPaddingBefore(value: any): Property
  /** Create a virtual `padding-block` CSS property. */
  function paddingBlock(value: any): Property
  /** Create a virtual `padding-block-end` CSS property. */
  function paddingBlockEnd(value: any): Property
  /** Create a virtual `padding-block-start` CSS property. */
  function paddingBlockStart(value: any): Property
  /** Create a virtual `padding-bottom` CSS property. */
  function paddingBottom(value: any): Property
  /** Create a virtual `-moz-padding-end` CSS property. */
  function mozPaddingEnd(value: any): Property
  /** Create a virtual `-webkit-padding-end` CSS property. */
  function webkitPaddingEnd(value: any): Property
  /** Create a virtual `padding-inline` CSS property. */
  function paddingInline(value: any): Property
  /** Create a virtual `padding-inline-end` CSS property. */
  function paddingInlineEnd(value: any): Property
  /** Create a virtual `padding-inline-start` CSS property. */
  function paddingInlineStart(value: any): Property
  /** Create a virtual `padding-left` CSS property. */
  function paddingLeft(value: any): Property
  /** Create a virtual `padding-right` CSS property. */
  function paddingRight(value: any): Property
  /** Create a virtual `-moz-padding-start` CSS property. */
  function mozPaddingStart(value: any): Property
  /** Create a virtual `-webkit-padding-start` CSS property. */
  function webkitPaddingStart(value: any): Property
  /** Create a virtual `padding-top` CSS property. */
  function paddingTop(value: any): Property
  /** Create a virtual `page` CSS property. */
  function page(value: any): Property
  /** Create a virtual `page-break-after` CSS property. */
  function pageBreakAfter(value: any): Property
  /** Create a virtual `page-break-before` CSS property. */
  function pageBreakBefore(value: any): Property
  /** Create a virtual `page-break-inside` CSS property. */
  function pageBreakInside(value: any): Property
  /** Create a virtual `page-orientation` CSS property. */
  function pageOrientation(value: any): Property
  /** Create a virtual `page-transition-tag` CSS property. */
  function pageTransitionTag(value: any): Property
  /** Create a virtual `paint-order` CSS property. */
  function paintOrder(value: any): Property
  /** Create a virtual `pause` CSS property. */
  function pause(value: any): Property
  /** Create a virtual `pause-after` CSS property. */
  function pauseAfter(value: any): Property
  /** Create a virtual `pause-before` CSS property. */
  function pauseBefore(value: any): Property
  /** Create a virtual `-apple-pay-button-style` CSS property. */
  function applePayButtonStyle(value: any): Property
  /** Create a virtual `-apple-pay-button-type` CSS property. */
  function applePayButtonType(value: any): Property
  /** Create a virtual `pen-action` CSS property. */
  function penAction(value: any): Property
  /** Create a virtual `perspective` CSS property. */
  function perspective(value: any): Property
  /** Create a virtual `-moz-perspective` CSS property. */
  function mozPerspective(value: any): Property
  /** Create a virtual `-ms-perspective` CSS property. */
  function msPerspective(value: any): Property
  /** Create a virtual `perspective-origin` CSS property. */
  function perspectiveOrigin(value: any): Property
  /** Create a virtual `-moz-perspective-origin` CSS property. */
  function mozPerspectiveOrigin(value: any): Property
  /** Create a virtual `-ms-perspective-origin` CSS property. */
  function msPerspectiveOrigin(value: any): Property
  /** Create a virtual `-webkit-perspective-origin` CSS property. */
  function webkitPerspectiveOrigin(value: any): Property
  /** Create a virtual `perspective-origin-x` CSS property. */
  function perspectiveOriginX(value: any): Property
  /** Create a virtual `-webkit-perspective-origin-x` CSS property. */
  function webkitPerspectiveOriginX(value: any): Property
  /** Create a virtual `perspective-origin-y` CSS property. */
  function perspectiveOriginY(value: any): Property
  /** Create a virtual `-webkit-perspective-origin-y` CSS property. */
  function webkitPerspectiveOriginY(value: any): Property
  /** Create a virtual `-webkit-perspective` CSS property. */
  function webkitPerspective(value: any): Property
  /** Create a virtual `pitch` CSS property. */
  function pitch(value: any): Property
  /** Create a virtual `pitch-range` CSS property. */
  function pitchRange(value: any): Property
  /** Create a virtual `place-content` CSS property. */
  function placeContent(value: any): Property
  /** Create a virtual `place-items` CSS property. */
  function placeItems(value: any): Property
  /** Create a virtual `place-self` CSS property. */
  function placeSelf(value: any): Property
  /** Create a virtual `play-during` CSS property. */
  function playDuring(value: any): Property
  /** Create a virtual `pointer-events` CSS property. */
  function pointerEvents(value: any): Property
  /** Create a virtual `position` CSS property. */
  function position(value: any): Property
  /** Create a virtual `prefix` CSS property. */
  function prefix(value: any): Property
  /** Create a virtual `print-color-adjust` CSS property. */
  function printColorAdjust(value: any): Property
  /** Create a virtual `-webkit-print-color-adjust` CSS property. */
  function webkitPrintColorAdjust(value: any): Property
  /** Create a virtual `property-name` CSS property. */
  function propertyName(value: any): Property
  /** Create a virtual `quotes` CSS property. */
  function quotes(value: any): Property
  /** Create a virtual `r` CSS property. */
  function r(value: any): Property
  /** Create a virtual `range` CSS property. */
  function range(value: any): Property
  /** Create a virtual `-webkit-region-break-after` CSS property. */
  function webkitRegionBreakAfter(value: any): Property
  /** Create a virtual `-webkit-region-break-before` CSS property. */
  function webkitRegionBreakBefore(value: any): Property
  /** Create a virtual `-webkit-region-break-inside` CSS property. */
  function webkitRegionBreakInside(value: any): Property
  /** Create a virtual `region-fragment` CSS property. */
  function regionFragment(value: any): Property
  /** Create a virtual `-webkit-region-fragment` CSS property. */
  function webkitRegionFragment(value: any): Property
  /** Create a virtual `-webkit-region-overflow` CSS property. */
  function webkitRegionOverflow(value: any): Property
  /** Create a virtual `resize` CSS property. */
  function resize(value: any): Property
  /** Create a virtual `rest` CSS property. */
  function rest(value: any): Property
  /** Create a virtual `rest-after` CSS property. */
  function restAfter(value: any): Property
  /** Create a virtual `rest-before` CSS property. */
  function restBefore(value: any): Property
  /** Create a virtual `richness` CSS property. */
  function richness(value: any): Property
  /** Create a virtual `right` CSS property. */
  function right(value: any): Property
  /** Create a virtual `rotate` CSS property. */
  function rotate(value: any): Property
  /** Create a virtual `row-gap` CSS property. */
  function rowGap(value: any): Property
  /** Create a virtual `-webkit-rtl-ordering` CSS property. */
  function webkitRtlOrdering(value: any): Property
  /** Create a virtual `ruby-align` CSS property. */
  function rubyAlign(value: any): Property
  /** Create a virtual `ruby-merge` CSS property. */
  function rubyMerge(value: any): Property
  /** Create a virtual `ruby-overhang` CSS property. */
  function rubyOverhang(value: any): Property
  /** Create a virtual `ruby-position` CSS property. */
  function rubyPosition(value: any): Property
  /** Create a virtual `-webkit-ruby-position` CSS property. */
  function webkitRubyPosition(value: any): Property
  /** Create a virtual `running` CSS property. */
  function running(value: any): Property
  /** Create a virtual `rx` CSS property. */
  function rx(value: any): Property
  /** Create a virtual `ry` CSS property. */
  function ry(value: any): Property
  /** Create a virtual `scale` CSS property. */
  function scale(value: any): Property
  /** Create a virtual `scroll-behavior` CSS property. */
  function scrollBehavior(value: any): Property
  /** Create a virtual `-ms-scroll-chaining` CSS property. */
  function msScrollChaining(value: any): Property
  /** Create a virtual `-ms-scroll-limit` CSS property. */
  function msScrollLimit(value: any): Property
  /** Create a virtual `-ms-scroll-limit-x-max` CSS property. */
  function msScrollLimitXMax(value: any): Property
  /** Create a virtual `-ms-scroll-limit-x-min` CSS property. */
  function msScrollLimitXMin(value: any): Property
  /** Create a virtual `-ms-scroll-limit-y-max` CSS property. */
  function msScrollLimitYMax(value: any): Property
  /** Create a virtual `-ms-scroll-limit-y-min` CSS property. */
  function msScrollLimitYMin(value: any): Property
  /** Create a virtual `scroll-margin` CSS property. */
  function scrollMargin(value: any): Property
  /** Create a virtual `scroll-margin-block` CSS property. */
  function scrollMarginBlock(value: any): Property
  /** Create a virtual `scroll-margin-block-end` CSS property. */
  function scrollMarginBlockEnd(value: any): Property
  /** Create a virtual `scroll-margin-block-start` CSS property. */
  function scrollMarginBlockStart(value: any): Property
  /** Create a virtual `scroll-margin-bottom` CSS property. */
  function scrollMarginBottom(value: any): Property
  /** Create a virtual `scroll-margin-inline` CSS property. */
  function scrollMarginInline(value: any): Property
  /** Create a virtual `scroll-margin-inline-end` CSS property. */
  function scrollMarginInlineEnd(value: any): Property
  /** Create a virtual `scroll-margin-inline-start` CSS property. */
  function scrollMarginInlineStart(value: any): Property
  /** Create a virtual `scroll-margin-left` CSS property. */
  function scrollMarginLeft(value: any): Property
  /** Create a virtual `scroll-margin-right` CSS property. */
  function scrollMarginRight(value: any): Property
  /** Create a virtual `scroll-margin-top` CSS property. */
  function scrollMarginTop(value: any): Property
  /** Create a virtual `scroll-padding` CSS property. */
  function scrollPadding(value: any): Property
  /** Create a virtual `scroll-padding-block` CSS property. */
  function scrollPaddingBlock(value: any): Property
  /** Create a virtual `scroll-padding-block-end` CSS property. */
  function scrollPaddingBlockEnd(value: any): Property
  /** Create a virtual `scroll-padding-block-start` CSS property. */
  function scrollPaddingBlockStart(value: any): Property
  /** Create a virtual `scroll-padding-bottom` CSS property. */
  function scrollPaddingBottom(value: any): Property
  /** Create a virtual `scroll-padding-inline` CSS property. */
  function scrollPaddingInline(value: any): Property
  /** Create a virtual `scroll-padding-inline-end` CSS property. */
  function scrollPaddingInlineEnd(value: any): Property
  /** Create a virtual `scroll-padding-inline-start` CSS property. */
  function scrollPaddingInlineStart(value: any): Property
  /** Create a virtual `scroll-padding-left` CSS property. */
  function scrollPaddingLeft(value: any): Property
  /** Create a virtual `scroll-padding-right` CSS property. */
  function scrollPaddingRight(value: any): Property
  /** Create a virtual `scroll-padding-top` CSS property. */
  function scrollPaddingTop(value: any): Property
  /** Create a virtual `-ms-scroll-rails` CSS property. */
  function msScrollRails(value: any): Property
  /** Create a virtual `scroll-snap-align` CSS property. */
  function scrollSnapAlign(value: any): Property
  /** Create a virtual `scroll-snap-coordinate` CSS property. */
  function scrollSnapCoordinate(value: any): Property
  /** Create a virtual `-webkit-scroll-snap-coordinate` CSS property. */
  function webkitScrollSnapCoordinate(value: any): Property
  /** Create a virtual `scroll-snap-destination` CSS property. */
  function scrollSnapDestination(value: any): Property
  /** Create a virtual `-webkit-scroll-snap-destination` CSS property. */
  function webkitScrollSnapDestination(value: any): Property
  /** Create a virtual `scroll-snap-margin` CSS property. */
  function scrollSnapMargin(value: any): Property
  /** Create a virtual `scroll-snap-margin-bottom` CSS property. */
  function scrollSnapMarginBottom(value: any): Property
  /** Create a virtual `scroll-snap-margin-left` CSS property. */
  function scrollSnapMarginLeft(value: any): Property
  /** Create a virtual `scroll-snap-margin-right` CSS property. */
  function scrollSnapMarginRight(value: any): Property
  /** Create a virtual `scroll-snap-margin-top` CSS property. */
  function scrollSnapMarginTop(value: any): Property
  /** Create a virtual `scroll-snap-points-x` CSS property. */
  function scrollSnapPointsX(value: any): Property
  /** Create a virtual `-ms-scroll-snap-points-x` CSS property. */
  function msScrollSnapPointsX(value: any): Property
  /** Create a virtual `-webkit-scroll-snap-points-x` CSS property. */
  function webkitScrollSnapPointsX(value: any): Property
  /** Create a virtual `scroll-snap-points-y` CSS property. */
  function scrollSnapPointsY(value: any): Property
  /** Create a virtual `-ms-scroll-snap-points-y` CSS property. */
  function msScrollSnapPointsY(value: any): Property
  /** Create a virtual `-webkit-scroll-snap-points-y` CSS property. */
  function webkitScrollSnapPointsY(value: any): Property
  /** Create a virtual `scroll-snap-stop` CSS property. */
  function scrollSnapStop(value: any): Property
  /** Create a virtual `scroll-snap-type` CSS property. */
  function scrollSnapType(value: any): Property
  /** Create a virtual `-ms-scroll-snap-type` CSS property. */
  function msScrollSnapType(value: any): Property
  /** Create a virtual `-webkit-scroll-snap-type` CSS property. */
  function webkitScrollSnapType(value: any): Property
  /** Create a virtual `scroll-snap-type-x` CSS property. */
  function scrollSnapTypeX(value: any): Property
  /** Create a virtual `scroll-snap-type-y` CSS property. */
  function scrollSnapTypeY(value: any): Property
  /** Create a virtual `-ms-scroll-snap-x` CSS property. */
  function msScrollSnapX(value: any): Property
  /** Create a virtual `-ms-scroll-snap-y` CSS property. */
  function msScrollSnapY(value: any): Property
  /** Create a virtual `scroll-timeline` CSS property. */
  function scrollTimeline(value: any): Property
  /** Create a virtual `scroll-timeline-axis` CSS property. */
  function scrollTimelineAxis(value: any): Property
  /** Create a virtual `scroll-timeline-name` CSS property. */
  function scrollTimelineName(value: any): Property
  /** Create a virtual `-ms-scroll-translation` CSS property. */
  function msScrollTranslation(value: any): Property
  /** Create a virtual `scrollbar-arrow-color` CSS property. */
  function scrollbarArrowColor(value: any): Property
  /** Create a virtual `scrollbar-base-color` CSS property. */
  function scrollbarBaseColor(value: any): Property
  /** Create a virtual `scrollbar-color` CSS property. */
  function scrollbarColor(value: any): Property
  /** Create a virtual `scrollbar-dark-shadow-color` CSS property. */
  function scrollbarDarkShadowColor(value: any): Property
  /** Create a virtual `scrollbar-darkshadow-color` CSS property. */
  function scrollbarDarkshadowColor(value: any): Property
  /** Create a virtual `scrollbar-face-color` CSS property. */
  function scrollbarFaceColor(value: any): Property
  /** Create a virtual `scrollbar-gutter` CSS property. */
  function scrollbarGutter(value: any): Property
  /** Create a virtual `scrollbar-highlight-color` CSS property. */
  function scrollbarHighlightColor(value: any): Property
  /** Create a virtual `scrollbar-shadow-color` CSS property. */
  function scrollbarShadowColor(value: any): Property
  /** Create a virtual `scrollbar-track-color` CSS property. */
  function scrollbarTrackColor(value: any): Property
  /** Create a virtual `scrollbar-width` CSS property. */
  function scrollbarWidth(value: any): Property
  /** Create a virtual `scrollbar3d-light-color` CSS property. */
  function scrollbar3dLightColor(value: any): Property
  /** Create a virtual `scrollbar3dlight-color` CSS property. */
  function scrollbar3dlightColor(value: any): Property
  /** Create a virtual `shape-image-threshold` CSS property. */
  function shapeImageThreshold(value: any): Property
  /** Create a virtual `-webkit-shape-image-threshold` CSS property. */
  function webkitShapeImageThreshold(value: any): Property
  /** Create a virtual `shape-inside` CSS property. */
  function shapeInside(value: any): Property
  /** Create a virtual `-webkit-shape-inside` CSS property. */
  function webkitShapeInside(value: any): Property
  /** Create a virtual `shape-margin` CSS property. */
  function shapeMargin(value: any): Property
  /** Create a virtual `-webkit-shape-margin` CSS property. */
  function webkitShapeMargin(value: any): Property
  /** Create a virtual `shape-outside` CSS property. */
  function shapeOutside(value: any): Property
  /** Create a virtual `-webkit-shape-outside` CSS property. */
  function webkitShapeOutside(value: any): Property
  /** Create a virtual `-webkit-shape-padding` CSS property. */
  function webkitShapePadding(value: any): Property
  /** Create a virtual `shape-rendering` CSS property. */
  function shapeRendering(value: any): Property
  /** Create a virtual `size` CSS property. */
  function size(value: any): Property
  /** Create a virtual `size-adjust` CSS property. */
  function sizeAdjust(value: any): Property
  /** Create a virtual `snap-height` CSS property. */
  function snapHeight(value: any): Property
  /** Create a virtual `solid-color` CSS property. */
  function solidColor(value: any): Property
  /** Create a virtual `solid-opacity` CSS property. */
  function solidOpacity(value: any): Property
  /** Create a virtual `spatial-navigation-action` CSS property. */
  function spatialNavigationAction(value: any): Property
  /** Create a virtual `spatial-navigation-contain` CSS property. */
  function spatialNavigationContain(value: any): Property
  /** Create a virtual `spatial-navigation-function` CSS property. */
  function spatialNavigationFunction(value: any): Property
  /** Create a virtual `speak` CSS property. */
  function speak(value: any): Property
  /** Create a virtual `speak-as` CSS property. */
  function speakAs(value: any): Property
  /** Create a virtual `speak-header` CSS property. */
  function speakHeader(value: any): Property
  /** Create a virtual `speak-numeral` CSS property. */
  function speakNumeral(value: any): Property
  /** Create a virtual `speak-punctuation` CSS property. */
  function speakPunctuation(value: any): Property
  /** Create a virtual `speech-rate` CSS property. */
  function speechRate(value: any): Property
  /** Create a virtual `src` CSS property. */
  function src(value: any): Property
  /** Create a virtual `-moz-stack-sizing` CSS property. */
  function mozStackSizing(value: any): Property
  /** Create a virtual `stop-color` CSS property. */
  function stopColor(value: any): Property
  /** Create a virtual `stop-opacity` CSS property. */
  function stopOpacity(value: any): Property
  /** Create a virtual `stress` CSS property. */
  function stress(value: any): Property
  /** Create a virtual `string-set` CSS property. */
  function stringSet(value: any): Property
  /** Create a virtual `stroke` CSS property. */
  function stroke(value: any): Property
  /** Create a virtual `stroke-align` CSS property. */
  function strokeAlign(value: any): Property
  /** Create a virtual `stroke-alignment` CSS property. */
  function strokeAlignment(value: any): Property
  /** Create a virtual `stroke-break` CSS property. */
  function strokeBreak(value: any): Property
  /** Create a virtual `stroke-color` CSS property. */
  function strokeColor(value: any): Property
  /** Create a virtual `stroke-dash-corner` CSS property. */
  function strokeDashCorner(value: any): Property
  /** Create a virtual `stroke-dash-justify` CSS property. */
  function strokeDashJustify(value: any): Property
  /** Create a virtual `stroke-dashadjust` CSS property. */
  function strokeDashadjust(value: any): Property
  /** Create a virtual `stroke-dasharray` CSS property. */
  function strokeDasharray(value: any): Property
  /** Create a virtual `stroke-dashcorner` CSS property. */
  function strokeDashcorner(value: any): Property
  /** Create a virtual `stroke-dashoffset` CSS property. */
  function strokeDashoffset(value: any): Property
  /** Create a virtual `stroke-image` CSS property. */
  function strokeImage(value: any): Property
  /** Create a virtual `stroke-linecap` CSS property. */
  function strokeLinecap(value: any): Property
  /** Create a virtual `stroke-linejoin` CSS property. */
  function strokeLinejoin(value: any): Property
  /** Create a virtual `stroke-miterlimit` CSS property. */
  function strokeMiterlimit(value: any): Property
  /** Create a virtual `stroke-opacity` CSS property. */
  function strokeOpacity(value: any): Property
  /** Create a virtual `stroke-origin` CSS property. */
  function strokeOrigin(value: any): Property
  /** Create a virtual `stroke-position` CSS property. */
  function strokePosition(value: any): Property
  /** Create a virtual `stroke-repeat` CSS property. */
  function strokeRepeat(value: any): Property
  /** Create a virtual `stroke-size` CSS property. */
  function strokeSize(value: any): Property
  /** Create a virtual `stroke-width` CSS property. */
  function strokeWidth(value: any): Property
  /** Create a virtual `suffix` CSS property. */
  function suffix(value: any): Property
  /** Create a virtual `supported-color-schemes` CSS property. */
  function supportedColorSchemes(value: any): Property
  /** Create a virtual `-webkit-svg-shadow` CSS property. */
  function webkitSvgShadow(value: any): Property
  /** Create a virtual `symbols` CSS property. */
  function symbols(value: any): Property
  /** Create a virtual `syntax` CSS property. */
  function syntax(value: any): Property
  /** Create a virtual `system` CSS property. */
  function system(value: any): Property
  /** Create a virtual `tab-size` CSS property. */
  function tabSize(value: any): Property
  /** Create a virtual `-moz-tab-size` CSS property. */
  function mozTabSize(value: any): Property
  /** Create a virtual `-o-tab-size` CSS property. */
  function oTabSize(value: any): Property
  /** Create a virtual `-o-table-baseline` CSS property. */
  function oTableBaseline(value: any): Property
  /** Create a virtual `table-layout` CSS property. */
  function tableLayout(value: any): Property
  /** Create a virtual `-webkit-tap-highlight-color` CSS property. */
  function webkitTapHighlightColor(value: any): Property
  /** Create a virtual `text-align` CSS property. */
  function textAlign(value: any): Property
  /** Create a virtual `text-align-all` CSS property. */
  function textAlignAll(value: any): Property
  /** Create a virtual `text-align-last` CSS property. */
  function textAlignLast(value: any): Property
  /** Create a virtual `-moz-text-align-last` CSS property. */
  function mozTextAlignLast(value: any): Property
  /** Create a virtual `text-anchor` CSS property. */
  function textAnchor(value: any): Property
  /** Create a virtual `text-autospace` CSS property. */
  function textAutospace(value: any): Property
  /** Create a virtual `-moz-text-blink` CSS property. */
  function mozTextBlink(value: any): Property
  /** Create a virtual `-ms-text-combine-horizontal` CSS property. */
  function msTextCombineHorizontal(value: any): Property
  /** Create a virtual `text-combine-upright` CSS property. */
  function textCombineUpright(value: any): Property
  /** Create a virtual `-webkit-text-combine` CSS property. */
  function webkitTextCombine(value: any): Property
  /** Create a virtual `text-decoration` CSS property. */
  function textDecoration(value: any): Property
  /** Create a virtual `text-decoration-blink` CSS property. */
  function textDecorationBlink(value: any): Property
  /** Create a virtual `text-decoration-color` CSS property. */
  function textDecorationColor(value: any): Property
  /** Create a virtual `-moz-text-decoration-color` CSS property. */
  function mozTextDecorationColor(value: any): Property
  /** Create a virtual `-webkit-text-decoration-color` CSS property. */
  function webkitTextDecorationColor(value: any): Property
  /** Create a virtual `text-decoration-line` CSS property. */
  function textDecorationLine(value: any): Property
  /** Create a virtual `-moz-text-decoration-line` CSS property. */
  function mozTextDecorationLine(value: any): Property
  /** Create a virtual `text-decoration-line-through` CSS property. */
  function textDecorationLineThrough(value: any): Property
  /** Create a virtual `-webkit-text-decoration-line` CSS property. */
  function webkitTextDecorationLine(value: any): Property
  /** Create a virtual `text-decoration-none` CSS property. */
  function textDecorationNone(value: any): Property
  /** Create a virtual `text-decoration-overline` CSS property. */
  function textDecorationOverline(value: any): Property
  /** Create a virtual `text-decoration-skip` CSS property. */
  function textDecorationSkip(value: any): Property
  /** Create a virtual `text-decoration-skip-box` CSS property. */
  function textDecorationSkipBox(value: any): Property
  /** Create a virtual `text-decoration-skip-ink` CSS property. */
  function textDecorationSkipInk(value: any): Property
  /** Create a virtual `text-decoration-skip-inset` CSS property. */
  function textDecorationSkipInset(value: any): Property
  /** Create a virtual `text-decoration-skip-self` CSS property. */
  function textDecorationSkipSelf(value: any): Property
  /** Create a virtual `text-decoration-skip-spaces` CSS property. */
  function textDecorationSkipSpaces(value: any): Property
  /** Create a virtual `-webkit-text-decoration-skip` CSS property. */
  function webkitTextDecorationSkip(value: any): Property
  /** Create a virtual `text-decoration-style` CSS property. */
  function textDecorationStyle(value: any): Property
  /** Create a virtual `-moz-text-decoration-style` CSS property. */
  function mozTextDecorationStyle(value: any): Property
  /** Create a virtual `-webkit-text-decoration-style` CSS property. */
  function webkitTextDecorationStyle(value: any): Property
  /** Create a virtual `text-decoration-thickness` CSS property. */
  function textDecorationThickness(value: any): Property
  /** Create a virtual `text-decoration-trim` CSS property. */
  function textDecorationTrim(value: any): Property
  /** Create a virtual `text-decoration-underline` CSS property. */
  function textDecorationUnderline(value: any): Property
  /** Create a virtual `-webkit-text-decoration` CSS property. */
  function webkitTextDecoration(value: any): Property
  /** Create a virtual `-webkit-text-decorations-in-effect` CSS property. */
  function webkitTextDecorationsInEffect(value: any): Property
  /** Create a virtual `text-edge` CSS property. */
  function textEdge(value: any): Property
  /** Create a virtual `text-emphasis` CSS property. */
  function textEmphasis(value: any): Property
  /** Create a virtual `text-emphasis-color` CSS property. */
  function textEmphasisColor(value: any): Property
  /** Create a virtual `-webkit-text-emphasis-color` CSS property. */
  function webkitTextEmphasisColor(value: any): Property
  /** Create a virtual `text-emphasis-position` CSS property. */
  function textEmphasisPosition(value: any): Property
  /** Create a virtual `-webkit-text-emphasis-position` CSS property. */
  function webkitTextEmphasisPosition(value: any): Property
  /** Create a virtual `text-emphasis-skip` CSS property. */
  function textEmphasisSkip(value: any): Property
  /** Create a virtual `text-emphasis-style` CSS property. */
  function textEmphasisStyle(value: any): Property
  /** Create a virtual `-webkit-text-emphasis-style` CSS property. */
  function webkitTextEmphasisStyle(value: any): Property
  /** Create a virtual `-webkit-text-emphasis` CSS property. */
  function webkitTextEmphasis(value: any): Property
  /** Create a virtual `-webkit-text-fill-color` CSS property. */
  function webkitTextFillColor(value: any): Property
  /** Create a virtual `text-group-align` CSS property. */
  function textGroupAlign(value: any): Property
  /** Create a virtual `text-indent` CSS property. */
  function textIndent(value: any): Property
  /** Create a virtual `text-justify` CSS property. */
  function textJustify(value: any): Property
  /** Create a virtual `text-justify-trim` CSS property. */
  function textJustifyTrim(value: any): Property
  /** Create a virtual `text-kashida` CSS property. */
  function textKashida(value: any): Property
  /** Create a virtual `text-kashida-space` CSS property. */
  function textKashidaSpace(value: any): Property
  /** Create a virtual `text-line-through` CSS property. */
  function textLineThrough(value: any): Property
  /** Create a virtual `text-line-through-color` CSS property. */
  function textLineThroughColor(value: any): Property
  /** Create a virtual `text-line-through-mode` CSS property. */
  function textLineThroughMode(value: any): Property
  /** Create a virtual `text-line-through-style` CSS property. */
  function textLineThroughStyle(value: any): Property
  /** Create a virtual `text-line-through-width` CSS property. */
  function textLineThroughWidth(value: any): Property
  /** Create a virtual `text-orientation` CSS property. */
  function textOrientation(value: any): Property
  /** Create a virtual `-webkit-text-orientation` CSS property. */
  function webkitTextOrientation(value: any): Property
  /** Create a virtual `text-overflow` CSS property. */
  function textOverflow(value: any): Property
  /** Create a virtual `text-overline` CSS property. */
  function textOverline(value: any): Property
  /** Create a virtual `text-overline-color` CSS property. */
  function textOverlineColor(value: any): Property
  /** Create a virtual `text-overline-mode` CSS property. */
  function textOverlineMode(value: any): Property
  /** Create a virtual `text-overline-style` CSS property. */
  function textOverlineStyle(value: any): Property
  /** Create a virtual `text-overline-width` CSS property. */
  function textOverlineWidth(value: any): Property
  /** Create a virtual `text-rendering` CSS property. */
  function textRendering(value: any): Property
  /** Create a virtual `-webkit-text-security` CSS property. */
  function webkitTextSecurity(value: any): Property
  /** Create a virtual `text-shadow` CSS property. */
  function textShadow(value: any): Property
  /** Create a virtual `text-size-adjust` CSS property. */
  function textSizeAdjust(value: any): Property
  /** Create a virtual `-moz-text-size-adjust` CSS property. */
  function mozTextSizeAdjust(value: any): Property
  /** Create a virtual `-ms-text-size-adjust` CSS property. */
  function msTextSizeAdjust(value: any): Property
  /** Create a virtual `-webkit-text-size-adjust` CSS property. */
  function webkitTextSizeAdjust(value: any): Property
  /** Create a virtual `text-space-collapse` CSS property. */
  function textSpaceCollapse(value: any): Property
  /** Create a virtual `text-space-trim` CSS property. */
  function textSpaceTrim(value: any): Property
  /** Create a virtual `text-spacing` CSS property. */
  function textSpacing(value: any): Property
  /** Create a virtual `-webkit-text-stroke-color` CSS property. */
  function webkitTextStrokeColor(value: any): Property
  /** Create a virtual `-webkit-text-stroke` CSS property. */
  function webkitTextStroke(value: any): Property
  /** Create a virtual `-webkit-text-stroke-width` CSS property. */
  function webkitTextStrokeWidth(value: any): Property
  /** Create a virtual `text-transform` CSS property. */
  function textTransform(value: any): Property
  /** Create a virtual `text-underline` CSS property. */
  function textUnderline(value: any): Property
  /** Create a virtual `text-underline-color` CSS property. */
  function textUnderlineColor(value: any): Property
  /** Create a virtual `text-underline-mode` CSS property. */
  function textUnderlineMode(value: any): Property
  /** Create a virtual `text-underline-offset` CSS property. */
  function textUnderlineOffset(value: any): Property
  /** Create a virtual `text-underline-position` CSS property. */
  function textUnderlinePosition(value: any): Property
  /** Create a virtual `-webkit-text-underline-position` CSS property. */
  function webkitTextUnderlinePosition(value: any): Property
  /** Create a virtual `text-underline-style` CSS property. */
  function textUnderlineStyle(value: any): Property
  /** Create a virtual `text-underline-width` CSS property. */
  function textUnderlineWidth(value: any): Property
  /** Create a virtual `text-wrap` CSS property. */
  function textWrap(value: any): Property
  /** Create a virtual `-webkit-text-zoom` CSS property. */
  function webkitTextZoom(value: any): Property
  /** Create a virtual `top` CSS property. */
  function top(value: any): Property
  /** Create a virtual `touch-action` CSS property. */
  function touchAction(value: any): Property
  /** Create a virtual `touch-action-delay` CSS property. */
  function touchActionDelay(value: any): Property
  /** Create a virtual `-ms-touch-action` CSS property. */
  function msTouchAction(value: any): Property
  /** Create a virtual `-webkit-touch-callout` CSS property. */
  function webkitTouchCallout(value: any): Property
  /** Create a virtual `-ms-touch-select` CSS property. */
  function msTouchSelect(value: any): Property
  /** Create a virtual `-apple-trailing-word` CSS property. */
  function appleTrailingWord(value: any): Property
  /** Create a virtual `transform` CSS property. */
  function transform(value: any): Property
  /** Create a virtual `transform-box` CSS property. */
  function transformBox(value: any): Property
  /** Create a virtual `-moz-transform` CSS property. */
  function mozTransform(value: any): Property
  /** Create a virtual `-ms-transform` CSS property. */
  function msTransform(value: any): Property
  /** Create a virtual `-o-transform` CSS property. */
  function oTransform(value: any): Property
  /** Create a virtual `transform-origin` CSS property. */
  function transformOrigin(value: any): Property
  /** Create a virtual `-moz-transform-origin` CSS property. */
  function mozTransformOrigin(value: any): Property
  /** Create a virtual `-ms-transform-origin` CSS property. */
  function msTransformOrigin(value: any): Property
  /** Create a virtual `-o-transform-origin` CSS property. */
  function oTransformOrigin(value: any): Property
  /** Create a virtual `-webkit-transform-origin` CSS property. */
  function webkitTransformOrigin(value: any): Property
  /** Create a virtual `transform-origin-x` CSS property. */
  function transformOriginX(value: any): Property
  /** Create a virtual `-webkit-transform-origin-x` CSS property. */
  function webkitTransformOriginX(value: any): Property
  /** Create a virtual `transform-origin-y` CSS property. */
  function transformOriginY(value: any): Property
  /** Create a virtual `-webkit-transform-origin-y` CSS property. */
  function webkitTransformOriginY(value: any): Property
  /** Create a virtual `transform-origin-z` CSS property. */
  function transformOriginZ(value: any): Property
  /** Create a virtual `-webkit-transform-origin-z` CSS property. */
  function webkitTransformOriginZ(value: any): Property
  /** Create a virtual `transform-style` CSS property. */
  function transformStyle(value: any): Property
  /** Create a virtual `-moz-transform-style` CSS property. */
  function mozTransformStyle(value: any): Property
  /** Create a virtual `-ms-transform-style` CSS property. */
  function msTransformStyle(value: any): Property
  /** Create a virtual `-webkit-transform-style` CSS property. */
  function webkitTransformStyle(value: any): Property
  /** Create a virtual `-webkit-transform` CSS property. */
  function webkitTransform(value: any): Property
  /** Create a virtual `transition` CSS property. */
  function transition(value: any): Property
  /** Create a virtual `transition-delay` CSS property. */
  function transitionDelay(value: any): Property
  /** Create a virtual `-moz-transition-delay` CSS property. */
  function mozTransitionDelay(value: any): Property
  /** Create a virtual `-ms-transition-delay` CSS property. */
  function msTransitionDelay(value: any): Property
  /** Create a virtual `-o-transition-delay` CSS property. */
  function oTransitionDelay(value: any): Property
  /** Create a virtual `-webkit-transition-delay` CSS property. */
  function webkitTransitionDelay(value: any): Property
  /** Create a virtual `transition-duration` CSS property. */
  function transitionDuration(value: any): Property
  /** Create a virtual `-moz-transition-duration` CSS property. */
  function mozTransitionDuration(value: any): Property
  /** Create a virtual `-ms-transition-duration` CSS property. */
  function msTransitionDuration(value: any): Property
  /** Create a virtual `-o-transition-duration` CSS property. */
  function oTransitionDuration(value: any): Property
  /** Create a virtual `-webkit-transition-duration` CSS property. */
  function webkitTransitionDuration(value: any): Property
  /** Create a virtual `-moz-transition` CSS property. */
  function mozTransition(value: any): Property
  /** Create a virtual `-ms-transition` CSS property. */
  function msTransition(value: any): Property
  /** Create a virtual `-o-transition` CSS property. */
  function oTransition(value: any): Property
  /** Create a virtual `transition-property` CSS property. */
  function transitionProperty(value: any): Property
  /** Create a virtual `-moz-transition-property` CSS property. */
  function mozTransitionProperty(value: any): Property
  /** Create a virtual `-ms-transition-property` CSS property. */
  function msTransitionProperty(value: any): Property
  /** Create a virtual `-o-transition-property` CSS property. */
  function oTransitionProperty(value: any): Property
  /** Create a virtual `-webkit-transition-property` CSS property. */
  function webkitTransitionProperty(value: any): Property
  /** Create a virtual `transition-timing-function` CSS property. */
  function transitionTimingFunction(value: any): Property
  /** Create a virtual `-moz-transition-timing-function` CSS property. */
  function mozTransitionTimingFunction(value: any): Property
  /** Create a virtual `-ms-transition-timing-function` CSS property. */
  function msTransitionTimingFunction(value: any): Property
  /** Create a virtual `-o-transition-timing-function` CSS property. */
  function oTransitionTimingFunction(value: any): Property
  /** Create a virtual `-webkit-transition-timing-function` CSS property. */
  function webkitTransitionTimingFunction(value: any): Property
  /** Create a virtual `-webkit-transition` CSS property. */
  function webkitTransition(value: any): Property
  /** Create a virtual `translate` CSS property. */
  function translate(value: any): Property
  /** Create a virtual `uc-alt-skin` CSS property. */
  function ucAltSkin(value: any): Property
  /** Create a virtual `uc-skin` CSS property. */
  function ucSkin(value: any): Property
  /** Create a virtual `unicode-bidi` CSS property. */
  function unicodeBidi(value: any): Property
  /** Create a virtual `unicode-range` CSS property. */
  function unicodeRange(value: any): Property
  /** Create a virtual `-webkit-user-drag` CSS property. */
  function webkitUserDrag(value: any): Property
  /** Create a virtual `-moz-user-focus` CSS property. */
  function mozUserFocus(value: any): Property
  /** Create a virtual `-moz-user-input` CSS property. */
  function mozUserInput(value: any): Property
  /** Create a virtual `-moz-user-modify` CSS property. */
  function mozUserModify(value: any): Property
  /** Create a virtual `-webkit-user-modify` CSS property. */
  function webkitUserModify(value: any): Property
  /** Create a virtual `user-select` CSS property. */
  function userSelect(value: any): Property
  /** Create a virtual `-moz-user-select` CSS property. */
  function mozUserSelect(value: any): Property
  /** Create a virtual `-ms-user-select` CSS property. */
  function msUserSelect(value: any): Property
  /** Create a virtual `-webkit-user-select` CSS property. */
  function webkitUserSelect(value: any): Property
  /** Create a virtual `user-zoom` CSS property. */
  function userZoom(value: any): Property
  /** Create a virtual `vector-effect` CSS property. */
  function vectorEffect(value: any): Property
  /** Create a virtual `vertical-align` CSS property. */
  function verticalAlign(value: any): Property
  /** Create a virtual `view-timeline` CSS property. */
  function viewTimeline(value: any): Property
  /** Create a virtual `view-timeline-axis` CSS property. */
  function viewTimelineAxis(value: any): Property
  /** Create a virtual `view-timeline-inset` CSS property. */
  function viewTimelineInset(value: any): Property
  /** Create a virtual `view-timeline-name` CSS property. */
  function viewTimelineName(value: any): Property
  /** Create a virtual `viewport-fill` CSS property. */
  function viewportFill(value: any): Property
  /** Create a virtual `viewport-fill-opacity` CSS property. */
  function viewportFillOpacity(value: any): Property
  /** Create a virtual `viewport-fit` CSS property. */
  function viewportFit(value: any): Property
  /** Create a virtual `visibility` CSS property. */
  function visibility(value: any): Property
  /** Create a virtual `voice-balance` CSS property. */
  function voiceBalance(value: any): Property
  /** Create a virtual `voice-duration` CSS property. */
  function voiceDuration(value: any): Property
  /** Create a virtual `voice-family` CSS property. */
  function voiceFamily(value: any): Property
  /** Create a virtual `voice-pitch` CSS property. */
  function voicePitch(value: any): Property
  /** Create a virtual `voice-range` CSS property. */
  function voiceRange(value: any): Property
  /** Create a virtual `voice-rate` CSS property. */
  function voiceRate(value: any): Property
  /** Create a virtual `voice-stress` CSS property. */
  function voiceStress(value: any): Property
  /** Create a virtual `voice-volume` CSS property. */
  function voiceVolume(value: any): Property
  /** Create a virtual `volume` CSS property. */
  function volume(value: any): Property
  /** Create a virtual `white-space` CSS property. */
  function whiteSpace(value: any): Property
  /** Create a virtual `-webkit-widget-region` CSS property. */
  function webkitWidgetRegion(value: any): Property
  /** Create a virtual `widows` CSS property. */
  function widows(value: any): Property
  /** Create a virtual `width` CSS property. */
  function width(value: any): Property
  /** Create a virtual `will-change` CSS property. */
  function willChange(value: any): Property
  /** Create a virtual `-moz-window-dragging` CSS property. */
  function mozWindowDragging(value: any): Property
  /** Create a virtual `-moz-window-shadow` CSS property. */
  function mozWindowShadow(value: any): Property
  /** Create a virtual `word-boundary-detection` CSS property. */
  function wordBoundaryDetection(value: any): Property
  /** Create a virtual `word-boundary-expansion` CSS property. */
  function wordBoundaryExpansion(value: any): Property
  /** Create a virtual `word-break` CSS property. */
  function wordBreak(value: any): Property
  /** Create a virtual `word-spacing` CSS property. */
  function wordSpacing(value: any): Property
  /** Create a virtual `word-wrap` CSS property. */
  function wordWrap(value: any): Property
  /** Create a virtual `wrap-after` CSS property. */
  function wrapAfter(value: any): Property
  /** Create a virtual `wrap-before` CSS property. */
  function wrapBefore(value: any): Property
  /** Create a virtual `wrap-flow` CSS property. */
  function wrapFlow(value: any): Property
  /** Create a virtual `-ms-wrap-flow` CSS property. */
  function msWrapFlow(value: any): Property
  /** Create a virtual `-webkit-wrap-flow` CSS property. */
  function webkitWrapFlow(value: any): Property
  /** Create a virtual `wrap-inside` CSS property. */
  function wrapInside(value: any): Property
  /** Create a virtual `-ms-wrap-margin` CSS property. */
  function msWrapMargin(value: any): Property
  /** Create a virtual `-webkit-wrap-margin` CSS property. */
  function webkitWrapMargin(value: any): Property
  /** Create a virtual `-webkit-wrap-padding` CSS property. */
  function webkitWrapPadding(value: any): Property
  /** Create a virtual `-webkit-wrap-shape-inside` CSS property. */
  function webkitWrapShapeInside(value: any): Property
  /** Create a virtual `-webkit-wrap-shape-outside` CSS property. */
  function webkitWrapShapeOutside(value: any): Property
  /** Create a virtual `wrap-through` CSS property. */
  function wrapThrough(value: any): Property
  /** Create a virtual `-ms-wrap-through` CSS property. */
  function msWrapThrough(value: any): Property
  /** Create a virtual `-webkit-wrap-through` CSS property. */
  function webkitWrapThrough(value: any): Property
  /** Create a virtual `-webkit-wrap` CSS property. */
  function webkitWrap(value: any): Property
  /** Create a virtual `writing-mode` CSS property. */
  function writingMode(value: any): Property
  /** Create a virtual `-webkit-writing-mode` CSS property. */
  function webkitWritingMode(value: any): Property
  /** Create a virtual `x` CSS property. */
  function x(value: any): Property
  /** Create a virtual `y` CSS property. */
  function y(value: any): Property
  /** Create a virtual `z-index` CSS property. */
  function zIndex(value: any): Property
  /** Create a virtual `zoom` CSS property. */
  function zoom(value: any): Property

  // CSS At-Rules

  /** Create a virtual `@charset` CSS at-rule. */
  function $charset(...contents: any[]): AtRule
  /** Create a virtual `@import` CSS at-rule. */
  function $import(...contents: any[]): AtRule
  /** Create a virtual `@namespace` CSS at-rule. */
  function $namespace(...contents: any[]): AtRule
  /** Create a virtual `@media` CSS at-rule. */
  function $media(...contents: any[]): AtRule
  /** Create a virtual `@supports` CSS at-rule. */
  function $supports(...contents: any[]): AtRule
  /** Create a virtual `@page` CSS at-rule. */
  function $page(...contents: any[]): AtRule
  /** Create a virtual `@keyframes` CSS at-rule. */
  function $keyframes(...contents: any[]): AtRule
  /** Create a virtual `@counter-style` CSS at-rule. */
  function $counterStyle(...contents: any[]): AtRule
  /** Create a virtual `@font-feature-values` CSS at-rule. */
  function $fontFeatureValues(...contents: any[]): AtRule
  /** Create a virtual `@layer` CSS at-rule. */
  function $layer(...contents: any[]): AtRule
  /** Create a virtual `@color-profile` CSS at-rule. */
  function $colorProfile(...contents: any[]): AtRule
  /** Create a virtual `@container` CSS at-rule. */
  function $container(...contents: any[]): AtRule
  /** Create a virtual `@font-palette-values` CSS at-rule. */
  function $fontPaletteValues(...contents: any[]): AtRule
  /** Create a virtual `@font-face` CSS at-rule. */
  function $fontFace(...contents: any[]): AtRule
}
